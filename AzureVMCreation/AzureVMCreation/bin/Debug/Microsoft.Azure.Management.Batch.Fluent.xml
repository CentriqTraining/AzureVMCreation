<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Management.Batch.Fluent</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl">
             <summary>
             Implementation for BatchAccount Application and its parent interfaces.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LmJhdGNoLmltcGxlbWVudGF0aW9uLkFwcGxpY2F0aW9uSW1wbA==
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.#ctor(System.String,Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl,Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationInner)">
            GENMHASH:E599FB9EB31E9A9D449368FB30F00A12:AE61E46F25E32E41F3889C4B879C0A37
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Id">
            GENMHASH:ACA2D5620579D8158A29586CA1FF4BC6:899F2B088BBBD76CCBC31221756265BC
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.DisplayName">
            GENMHASH:19FB5490B29F08AC39628CD5F893E975:D646459DD47DA53CB973DA0F86C056D7
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.ApplicationPackages">
            GENMHASH:EFC1A644FBCF1755C5FEB8713E37C978:7F01B6BD1881008A6F33AB93CA13267F
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.UpdatesAllowed">
            GENMHASH:146B96CEA6724B4FE81949C8EF098DD8:D586D4DA834AE90247EFB379AC82287B
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.DefaultVersion">
            GENMHASH:DB556E99F2F976BBB535413BB03A1680:AA1EF1036345377E11FFEFAC3E263093
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.CreateAsync(System.Threading.CancellationToken)">
            GENMHASH:32A8B56FE180FA4429482D706189DEA2:02EEC4EFE8B735CE832BF91D77CEE31E
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.UpdateAsync(System.Threading.CancellationToken)">
            GENMHASH:F08598A17ADD014E223DFD77272641FF:E166AAF3CE55ADF2533B6CBBEC6343E8
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.DeleteAsync(System.Threading.CancellationToken)">
            GENMHASH:0FEDA307DAD2022B36843E8905D26EAD:F0565BDDC7B68F770608A54BA76D915F
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.RefreshAsync(System.Threading.CancellationToken)">
            GENMHASH:4002186478A1CB0B59732EBFB18DEB3A:409C31CA8E99C248AA5D2D551769B232
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Attach">
            GENMHASH:077EB7776EFFBFAA141C1696E75EF7B3:F50FC9984285FA3EFE81DE58B2255BD1
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.WithAllowUpdates(System.Boolean)">
            GENMHASH:55BB543F59A0455E86C35D9906806D3C:DE335AE9836427CB73B730ED4780F396
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.WithDisplayName(System.String)">
            GENMHASH:EDAD7B033C93B5FEE1419E438619ABF3:BFAAB8F642DD8AD46F649E149BFDC452
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.NewApplication(System.String,Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl)">
            GENMHASH:5D2E49B9EB1EE6B00286D10BF760C32B:AD92800DE9BADB7C037AA5D5C472BE5C
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.WithoutApplicationPackage(System.String)">
            GENMHASH:C6B1C7CD3390E5A764EB666D3725852A:7231626F972ED418CDDF43B085F82CC0
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.WithApplicationPackage(Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl)">
            GENMHASH:82B5410A627E77D5AD19CCC6720999BE:1C157E45BB454131D222F2E92047ADE6
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.DefineNewApplicationPackage(System.String)">
            GENMHASH:0E8D1C15183C29E7CCEE3E8F4004573F:2356C0760522C333B1326ECB5D2FFE2D
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#Application#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IUpdate}#WithAllowUpdates(System.Boolean)">
            <summary>
            Allows automatic application updates.
            </summary>
            <param name="allowUpdates">True to allow automatic updates of a Batch application, otherwise false.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#Application#UpdateDefinition#IWithAttach{Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IUpdate}#WithDisplayName(System.String)">
            <summary>
            Specifies the display name for the Batch application.
            </summary>
            <param name="displayName">A display name for the application.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#Application#Definition#IWithAttach{Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IWithApplicationAndStorage}#WithAllowUpdates(System.Boolean)">
            <summary>
            The stage of a Batch application definition allowing automatic application updates.
            </summary>
            <param name="allowUpdates">True to allow the automatic updates of application, otherwise false.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#Application#Definition#IWithAttach{Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IWithApplicationAndStorage}#WithDisplayName(System.String)">
            <summary>
            Specifies a display name for the Batch application.
            </summary>
            <param name="displayName">A display name.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#ChildResource#Update#IInUpdate{Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IUpdate}#Attach">
            <summary>
            Attaches the child definition to the parent resource update.
            </summary>
            <return>The next stage of the parent definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#Application#UpdateDefinition#IWithApplicationPackage{Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IUpdate}#DefineNewApplicationPackage(System.String)">
            <summary>
            First stage to create new application package in Batch account application.
            </summary>
            <param name="version">The version of the application.</param>
            <return>Next stage to create the application.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#Application#Definition#IWithApplicationPackage{Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IWithApplicationAndStorage}#DefineNewApplicationPackage(System.String)">
            <summary>
            The first stage of a new application package definition in a Batch account application.
            </summary>
            <param name="applicationPackageName">The version of the application.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#ChildResource#Definition#IInDefinition{Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IWithApplicationAndStorage}#Attach">
            <summary>
            Attaches the child definition to the parent resource definiton.
            </summary>
            <return>The next stage of the parent definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#Application#Update#IWithOptionalProperties#WithAllowUpdates(System.Boolean)">
            <summary>
            Allows automatic application updates.
            </summary>
            <param name="allowUpdates">True to allow the automatic updates of the application, otherwise false.</param>
            <return>The next stage of the update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#Application#Update#IWithOptionalProperties#WithDisplayName(System.String)">
            <summary>
            Specifies the display name for the application.
            </summary>
            <param name="displayName">A display name.</param>
            <return>The next stage of the update.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#IApplication#DisplayName">
            <summary>
            Gets the display name of the application.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#IApplication#UpdatesAllowed">
            <summary>
            Gets true if automatic updates are allowed, otherwise false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#IApplication#ApplicationPackages">
            <summary>
            Gets application packages.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#IApplication#DefaultVersion">
            <summary>
            Gets the default version for the application.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#Application#Update#IWithApplicationPackage#DefineNewApplicationPackage(System.String)">
            <summary>
            First stage to create new application package in Batch account application.
            </summary>
            <param name="version">The version of the application.</param>
            <return>Next stage to create the application.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl.Microsoft#Azure#Management#Batch#Fluent#Application#Update#IWithApplicationPackage#WithoutApplicationPackage(System.String)">
            <summary>
            Deletes specified application package from the application.
            </summary>
            <param name="version">The reference version of the application to be removed.</param>
            <return>The stage representing updatable batch account definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl">
             <summary>
             Implementation for BatchAccount Application Package and its parent interfaces.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LmJhdGNoLmltcGxlbWVudGF0aW9uLkFwcGxpY2F0aW9uUGFja2FnZUltcGw=
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.#ctor(System.String,Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl,Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageInner,Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageOperations)">
            GENMHASH:5ABE0C6DFAB9C84B944D4C1A59824C2F:6759EA313F94C96A4A66A7653ACEA8F0
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.NewApplicationPackage(System.String,Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl,Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageOperations)">
            GENMHASH:C821FF91D77C2B3E93FA31DD47D5EA29:52876A7A5B8CFB81FC39CDD83E66AC9E
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.State">
            GENMHASH:AEE17FD09F624712647F5EBCEC141EA5:F31B0F3D0CD1A4C57DB28EB70C9E094A
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.Id">
            GENMHASH:ACA2D5620579D8158A29586CA1FF4BC6:B0C3E9401565240CA5340D3073CE3C9E
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.CreateAsync(System.Threading.CancellationToken)">
            GENMHASH:32A8B56FE180FA4429482D706189DEA2:AADCE604E8DD42B474E6BDC939BB469C
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.UpdateAsync(System.Threading.CancellationToken)">
            GENMHASH:F08598A17ADD014E223DFD77272641FF:AE1997EFB9BA750C329D12351BB02B24
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.Delete">
            GENMHASH:65E6085BB9054A86F6A84772E3F5A9EC:B194B6D94E13B7450F78AF5DC15946BE
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.DeleteAsync(System.Threading.CancellationToken)">
            GENMHASH:0FEDA307DAD2022B36843E8905D26EAD:9B272804AD473CBF3C5DEE818D16023C
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.Format">
            GENMHASH:4F85B844C04DBCB78637929FBE0113B6:495A62BBEF55F48ED4E08DBDE110BCC1
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.StorageUrl">
            GENMHASH:3AC68A76C669ACBD4BFBB653989DBB7F:6E17D6654F954854856F432407B38E15
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.StorageUrlExpiry">
            GENMHASH:A37A4D26CB8661C343A05DEC21AA8C15:87DBB1B0678DABB47DDEF1E68A40D156
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.LastActivationTime">
            GENMHASH:B840DDDCCD8C0172198F731FA02751C8:E01853DE05AECF3A39A61335E3B0063A
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.ActivateAsync(System.String,System.Threading.CancellationToken)">
            GENMHASH:CD5E69C00F6C1D6EBFC019860CB4AEA6:EF37815ABD90C720F1C27B3219616A48
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.GetInnerAsync(System.Threading.CancellationToken)">
            GENMHASH:4002186478A1CB0B59732EBFB18DEB3A:1A5A27E52191D0AB303947147157C578
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.Microsoft#Azure#Management#Batch#Fluent#IApplicationPackageBeta#Activate(System.String)">
            <summary>
            Activates the application package.
            </summary>
            <param name="format">The format of the uploaded Batch application package, either "zip" or "tar".</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.Microsoft#Azure#Management#Batch#Fluent#IApplicationPackage#LastActivationTime">
            <summary>
            Gets the last time this application package was activated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.Microsoft#Azure#Management#Batch#Fluent#IApplicationPackage#State">
            <summary>
            Gets the state of the application package.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.Microsoft#Azure#Management#Batch#Fluent#IApplicationPackageBeta#ActivateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Activates the application package asynchronously.
            </summary>
            <param name="format">The format of the uploaded Batch application package, either "zip" or "tar".</param>
            <return>A representation of the deferred computation of this call.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.Microsoft#Azure#Management#Batch#Fluent#IApplicationPackage#Format">
            <summary>
            Gets the format of the application package.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.Microsoft#Azure#Management#Batch#Fluent#IApplicationPackage#Delete">
            <summary>
            Deletes the application package.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.Microsoft#Azure#Management#Batch#Fluent#IApplicationPackage#StorageUrl">
            <summary>
            Gets the storage URL of the application package where teh application should be uploaded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl.Microsoft#Azure#Management#Batch#Fluent#IApplicationPackage#StorageUrlExpiry">
            <summary>
            Gets the expiry of the storage URL for the application package.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackagesImpl">
             <summary>
             Represents a applicationPackage collection associated with a application.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LmJhdGNoLmltcGxlbWVudGF0aW9uLkFwcGxpY2F0aW9uUGFja2FnZXNJbXBs
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackagesImpl.#ctor(Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageOperations,Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl)">
            GENMHASH:1E4CA209B0AD4710E5C7F91ECC84511C:5B3AB401341688B60693658520A75514
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackagesImpl.Define(System.String)">
            GENMHASH:8ACFB0E23F5F24AD384313679B65F404:E3D9E623E212362C450DC90E92DF3FCC
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackagesImpl.Remove(System.String)">
            GENMHASH:FC8ECF797E9AF86E82C3899A3D5C00BB:F0D1229265F1637BBE32E524D479B677
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackagesImpl.ListChildResources">
            GENMHASH:6A122C62EB559D6E6E53725061B422FB:31266E0F5C59A745DCBC67FE70DED1E8
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackagesImpl.NewChildResource(System.String)">
            GENMHASH:8E8DA5B84731A2D412247D25A544C502:2574C4932A56E8A550A63AD4C374CD50
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackagesImpl.AddApplicationPackage(Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageImpl)">
            GENMHASH:FDBA2803E9882B732C94FBD64DC9D13B:3CEA2921F291B19D8593A8BD0C8FFC02
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackagesImpl.AsMap">
            GENMHASH:310B2185D2F2431DF2BBDBC06E585C74:F487B2409E11AB3B3255E980C7B88B89
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.ApplicationsImpl">
             <summary>
             Represents a application collection associated with a Batch Account.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LmJhdGNoLmltcGxlbWVudGF0aW9uLkFwcGxpY2F0aW9uc0ltcGw=
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationsImpl.#ctor(Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl)">
            GENMHASH:7F1D4CEF6D71CC38B50E5E83BB1A6DDB:C5EC5A81A9B660015E5BC8802942DF92
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationsImpl.AsMap">
            GENMHASH:310B2185D2F2431DF2BBDBC06E585C74:9EA9A37597EAD8A99691D15719026E07
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationsImpl.Define(System.String)">
            GENMHASH:8ACFB0E23F5F24AD384313679B65F404:E3D9E623E212362C450DC90E92DF3FCC
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationsImpl.Update(System.String)">
            GENMHASH:C45CF357E710B1EC18EFF0A7FCD36915:3FB710926B53C5FC505B69CE66B544B2
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationsImpl.Remove(System.String)">
            GENMHASH:FC8ECF797E9AF86E82C3899A3D5C00BB:97028F0C4A32755497D72429D22C1125
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationsImpl.AddApplication(Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl)">
            GENMHASH:1DACF83E7D1C232CF9905C507D6A7D1E:C98FDBA4C2E9BEA0F3A50E68D16BAFBC
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationsImpl.ListChildResources">
            GENMHASH:6A122C62EB559D6E6E53725061B422FB:1236AAF317D02AEA462B940B4CC124B0
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationsImpl.NewChildResource(System.String)">
            GENMHASH:8E8DA5B84731A2D412247D25A544C502:9982C2948E7BAC51FB839F919FEB2148
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl">
             <summary>
             Implementation for BatchAccount and its parent interfaces.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LmJhdGNoLmltcGxlbWVudGF0aW9uLkJhdGNoQWNjb3VudEltcGw=
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.#ctor(System.String,Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner,Microsoft.Azure.Management.Batch.Fluent.IBatchManager,Microsoft.Azure.Management.Storage.Fluent.IStorageManager)">
            GENMHASH:4A1C1CE1A5FD21C2D77E9D249E53B0FC:2CAC092B38BC608EA9EE02AF770A8C0D
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.RefreshAsync(System.Threading.CancellationToken)">
            GENMHASH:4002186478A1CB0B59732EBFB18DEB3A:7CF0E4D2E689061F164F4E8CBEEE0032
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.CreateResourceAsync(System.Threading.CancellationToken)">
            GENMHASH:0202A00A1DCF248D2647DBDBEF2CA865:8F640179247B56242D756EB9A20DC705
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.ProvisioningState">
            GENMHASH:99D5BF64EA8AA0E287C9B6F77AAD6FC4:220D4662AAC7DF3BEFAF2B253278E85C
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.AccountEndpoint">
            GENMHASH:3FCA66079CE54B6624051AEEEA92C0A8:CD2239198F90BF2EF64E021F6D70308F
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.AutoStorage">
            GENMHASH:CDDA70CBBBCD12B0E5E922B6DE5C4E73:D188D673E338A86FF211CD3448D22B56
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.CoreQuota">
            GENMHASH:B9408D6B67E96EFD3D03881CF8649A9C:954939482CB158B1E2B509B48B09585C
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.PoolQuota">
            GENMHASH:7909615C516BD4E70FB021746FE02F60:CF51957E04C09A383C5B34AB6DFDC9EB
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.ActiveJobAndJobScheduleQuota">
            GENMHASH:016AA742D37BA9FE61D68507B4F6B530:31B3ECE969CEF408EACD27E4747DBA41
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.GetKeysAsync(System.Threading.CancellationToken)">
            GENMHASH:E4DFA7EA15F8324FB60C810D0C96D2FF:2C24EC1143CD8F8542845A9D3A0F116A
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.RegenerateKeysAsync(Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType,System.Threading.CancellationToken)">
            GENMHASH:837770291CB03D6C2AB9BDA889A5B07D:916D2188C6A5919A33DB6C700CE38C2A
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.SynchronizeAutoStorageKeysAsync(System.Threading.CancellationToken)">
            GENMHASH:F464067830773D729F2254E152F52E95:21A9F1295EB43C714008C5226DECA98E
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Applications">
            GENMHASH:672E69F72385496EBDF873EB27A7AA15:C0743C8E69844064A4120ADE2213CA5B
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.WithExistingStorageAccount(Microsoft.Azure.Management.Storage.Fluent.IStorageAccount)">
            GENMHASH:8CB9B7EEE4A4226A6F5BBB2958CC5E81:86F388ADD8163A5736375494E42FD140
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.WithNewStorageAccount(Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Storage.Fluent.IStorageAccount})">
            GENMHASH:2DC51FEC3C45675856B4AC1D97BECBFD:7DBF1A9A29FD54AF8FCA5A4E2F414F87
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.WithNewStorageAccount(System.String)">
            GENMHASH:5880487AA9218E8DF536932A49A0ACDD:FB1BAD32BA28A79F5AF97AFA7ED0EE6E
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.WithoutStorageAccount">
            GENMHASH:15D36ECAB00E9FCCF84FA127687D0CE2:A6E982618362E7F801925E23A6B4B4C2
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.DefineNewApplication(System.String)">
            GENMHASH:37FFE6BCAA81A22948354048E4226C80:39897EDD4A6BF2A85F51AA6E4ACCEFCF
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.UpdateApplication(System.String)">
            GENMHASH:AA28D9B344860923503977841560DF90:ECF6C949F03691F2AE2B18AA1E90F53D
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.WithoutApplication(System.String)">
            GENMHASH:0BB4AB6DEA8235ECDBD2F532E365AC87:533E5AAA5CEA9D252A01CBDB74B3516C
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.HandleStorageSettings">
            GENMHASH:C15DF8874364A70E09E929DF4B25106C:344A96E970807288B64F734F13C74B04
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.WithApplication(Microsoft.Azure.Management.Batch.Fluent.ApplicationImpl)">
            GENMHASH:901BF64732D40F1AFA2D615FD2C9EC6C:88A053E647AE5BA086B9195689F16CA9
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithStorageAccount#WithExistingStorageAccount(Microsoft.Azure.Management.Storage.Fluent.IStorageAccount)">
            <summary>
            Specifies an existing storage account to associate with the Batch account.
            </summary>
            <param name="storageAccount">An existing storage account.</param>
            <return>The next stage of the update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithStorageAccount#WithoutStorageAccount">
            <summary>
            Removes the associated storage account.
            </summary>
            <return>The next stage of the update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithStorageAccount#WithNewStorageAccount(Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Storage.Fluent.IStorageAccount})">
            <summary>
            Specifies a new storage account to create and associate with the Batch account.
            </summary>
            <param name="storageAccountCreatable">The definition of the storage account.</param>
            <return>The next stage of the update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithStorageAccount#WithNewStorageAccount(System.String)">
            <summary>
            Specifies a new storage account to create and associate with the Batch account.
            </summary>
            <param name="storageAccountName">The name of a new storage account.</param>
            <return>The next stage of the update.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#PoolQuota">
            <summary>
            Gets the pool quota for this Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#GetKeys">
            <return>The access keys for this Batch account.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#CoreQuota">
            <summary>
            Gets the core quota for this Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#AutoStorage">
            <summary>
            Gets the properties and status of any auto storage account associated with the Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#AccountEndpoint">
            <summary>
            Gets Batch account endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#ProvisioningState">
            <summary>
            Gets the provisioned state of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#ActiveJobAndJobScheduleQuota">
            <summary>
            Gets the active job and job schedule quota for this Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#SynchronizeAutoStorageKeys">
            <summary>
            Synchronizes the storage account keys for this Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#RegenerateKeys(Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType)">
            <summary>
            Regenerates the access keys for the Batch account.
            </summary>
            <param name="keyType">The type if key to regenerate.</param>
            <return>Regenerated access keys for this Batch account.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccount#Applications">
            <summary>
            Gets applications in this Batch account, indexed by name.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#ResourceActions#IRefreshable{Microsoft#Azure#Management#Batch#Fluent#IBatchAccount}#RefreshAsync(System.Threading.CancellationToken)">
            <summary>
            Refreshes the resource to sync with Azure.
            </summary>
            <return>The Observable to refreshed resource.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IWithStorage#WithExistingStorageAccount(Microsoft.Azure.Management.Storage.Fluent.IStorageAccount)">
            <summary>
            Specifies an existing storage account to associate with the Batch account.
            </summary>
            <param name="storageAccount">An existing storage account.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IWithStorage#WithNewStorageAccount(Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Storage.Fluent.IStorageAccount})">
            <summary>
            Specifies a new storage account to associate with the Batch account.
            </summary>
            <param name="storageAccountCreatable">A storage account to be created along with and used in the Batch account.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IWithStorage#WithNewStorageAccount(System.String)">
            <summary>
            Specifies the name of a new storage account to be created and associated with this Batch account.
            </summary>
            <param name="storageAccountName">The name of a new storage account.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithApplication#UpdateApplication(System.String)">
            <summary>
            Begins the description of an update of an existing Batch application in this Batch account.
            </summary>
            <param name="applicationId">The reference name of the application to be updated.</param>
            <return>The first stage of a Batch application update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithApplication#WithoutApplication(System.String)">
            <summary>
            Removes the specified application from the Batch account.
            </summary>
            <param name="applicationId">The reference name for the application to be removed.</param>
            <return>The next stage of the update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Update#IWithApplication#DefineNewApplication(System.String)">
            <summary>
            Starts a definition of an application to be created in the Batch account.
            </summary>
            <param name="applicationId">The reference name for the application.</param>
            <return>The first stage of a Batch application definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountImpl.Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IWithApplication#DefineNewApplication(System.String)">
            <summary>
            The stage of a Batch account definition allowing to add a Batch application.
            </summary>
            <param name="applicationId">The id of the application to create.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccountKeys">
             <summary>
             This class represents the access keys for the batch account.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LmJhdGNoLkJhdGNoQWNjb3VudEtleXM=
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountKeys.#ctor(System.String,System.String)">
             <summary>
             Constructor for the class.
             </summary>
             <param name="primaryKey">primaryKey primary key value for the batch account</param>
             <param name="secondaryKey">secondaryKey secondary key value for the batch account</param>
            GENMHASH:BE513982743CDE83CDF5A93879B0D23E:6A8D85C7DA5D85D7D8EBF5D88AF1F421
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountKeys.Primary">
            <summary>
            Get the primary value.
            </summary>
            <returns>the primary value</returns>
            GENMHASH:46645B73135AFEDAC926BE820EB4AFF7:6BCA9549104D8A2A532E7662192A505E
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountKeys.Secondary">
            <summary>
            Get the secondary value.
            </summary>
            <returns>the secondary value</returns>
            GENMHASH:BD8D51006FA39E65AA03B613332E3B24:7DDB4238BDF3FFEBCFD1D1526D7C6F64
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccountsImpl">
             <summary>
             Implementation for BatchAccounts and its parent interfaces.
             </summary>
            GENTHASH:Y29tLm1pY3Jvc29mdC5henVyZS5tYW5hZ2VtZW50LmJhdGNoLmltcGxlbWVudGF0aW9uLkJhdGNoQWNjb3VudHNJbXBs
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountsImpl.#ctor(Microsoft.Azure.Management.Batch.Fluent.BatchManager,Microsoft.Azure.Management.Storage.Fluent.IStorageManager)">
            GENMHASH:704C7023D5B3E401D9747BB082F479BF:B46F5BAEB07AD00DFC9E48403D627ACE
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountsImpl.WrapModel(System.String)">
            GENMHASH:2FE8C4C2D5EAD7E37787838DE0B47D92:0EB96B74B82C153C18B62BE83EB415B1
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountsImpl.ListInnerAsync(System.Threading.CancellationToken)">
            GENMHASH:7D6013E8B95E991005ED921F493EFCE4:6FB4EA69673E1D8A74E1418EB52BB9FE
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountsImpl.ListInnerByGroupAsync(System.String,System.Threading.CancellationToken)">
            GENMHASH:95834C6C7DA388E666B705A62A7D02BF:F27988875BD81EE531DA23D26C675612
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountsImpl.WrapModel(Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner)">
            GENMHASH:353632428E49DD5C2FB134FBBB79CA4F:7213377B7C84B2355F61715C95204A42
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountsImpl.Define(System.String)">
            GENMHASH:8ACFB0E23F5F24AD384313679B65F404:AD7C28D26EC1F237B93E54AD31899691
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountsImpl.DeleteInnerByGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            GENMHASH:0679DF8CA692D1AC80FC21655835E678:B9B028D620AC932FDF66D2783E476B0D
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountsImpl.GetInnerByGroupAsync(System.String,System.String,System.Threading.CancellationToken)">
            GENMHASH:AB63F782DA5B8D22523A284DAD664D17:7C0A1D0C3FE28C45F35B565F4AFF751D
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountsImpl.GetBatchAccountQuotaByLocation(Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region)">
            GENMHASH:F8EF648D033A93895EA3A4E4EB60B9B2:F0DC62FB7F617AF3C57F4F01580CC827
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountsImpl.Microsoft#Azure#Management#Batch#Fluent#IBatchAccounts#GetBatchAccountQuotaByLocation(Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region)">
            <summary>
            Looks up the number of Batch accounts that can be created in the specified region.
            </summary>
            <param name="region">An Azure region.</param>
            <return>The number of Batch accounts that can be created in the specified region.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountsImpl.Microsoft#Azure#Management#ResourceManager#Fluent#Core#CollectionActions#ISupportsCreating{Microsoft#Azure#Management#Batch#Fluent#BatchAccount#Definition#IBlank}#Define(System.String)">
            <summary>
            Begins a definition for a new resource.
            This is the beginning of the builder pattern used to create top level resources
            in Azure. The final method completing the definition and starting the actual resource creation
            process in Azure is  Creatable.create().
            Note that the  Creatable.create() method is
            only available at the stage of the resource definition that has the minimum set of input
            parameters specified. If you do not see  Creatable.create() among the available methods, it
            means you have not yet specified all the required input settings. Input settings generally begin
            with the word "with", for example: <code>.withNewResourceGroup()</code> and return the next stage
            of the resource definition, as an interface in the "fluent interface" style.
            </summary>
            <param name="name">The name of the new resource.</param>
            <return>The first stage of the new resource definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchManager.Authenticate(Microsoft.Azure.Management.ResourceManager.Fluent.Core.RestClient,System.String)">
             <summary>
             Creates an instance of BatchManager that exposes Batch resource management API entry points.
             </summary>
             <param name="restClient">the RestClient to be used for API calls</param>
             <param name="subscriptionId">the subscription</param>
             <return>the BatchManager</return>
            
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Application.Definition.IBlank`1">
            <summary>
            The first stage of a batch application definition.
            </summary>
            <typeparam name="ParentT">The stage of the parent Batch account definition to return to after attaching this definition.</typeparam>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Application.Definition.IWithAttach`1">
            <summary>
            The final stage of the application definition.
            At this stage, any remaining optional settings can be specified, or the application definition
            can be attached to the parent batch account definition.
            </summary>
            <typeparam name="ParentT">The stage of the parent Batch account definition to return to after attaching this definition.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Application.Definition.IWithAttach`1.WithDisplayName(System.String)">
            <summary>
            Specifies a display name for the Batch application.
            </summary>
            <param name="displayName">A display name.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Application.Definition.IWithAttach`1.WithAllowUpdates(System.Boolean)">
            <summary>
            The stage of a Batch application definition allowing automatic application updates.
            </summary>
            <param name="allowUpdates">True to allow the automatic updates of application, otherwise false.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Application.Definition.IWithApplicationPackage`1">
            <summary>
            The stage of a Batch application definition that allows the creation of an application package.
            </summary>
            <typeparam name="ParentT">The stage of the parent Batch account definition to return to after attaching this definition.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Application.Definition.IWithApplicationPackage`1.DefineNewApplicationPackage(System.String)">
            <summary>
            The first stage of a new application package definition in a Batch account application.
            </summary>
            <param name="applicationPackageName">The version of the application.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Application.Definition.IDefinition`1">
            <summary>
            The entirety of a Batch application definition as a part of a Batch account definition.
            </summary>
            <typeparam name="ParentT">The stage of the parent Batch account definition to return to after attaching this definition.</typeparam>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Application.UpdateDefinition.IBlank`1">
            <summary>
            The first stage of a Batch application definition.
            </summary>
            <typeparam name="ParentT">The stage of the parent Batch account definition to return to after attaching this definition.</typeparam>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Application.UpdateDefinition.IWithAttach`1">
            <summary>
            The final stage of a Batch application definition.
            At this stage, any remaining optional settings can be specified, or the application definition
            can be attached to the parent batch Account update.
            </summary>
            <typeparam name="ParentT">The stage of the parent Batch account update to return to after attaching this definition.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Application.UpdateDefinition.IWithAttach`1.WithDisplayName(System.String)">
            <summary>
            Specifies the display name for the Batch application.
            </summary>
            <param name="displayName">A display name for the application.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Application.UpdateDefinition.IWithAttach`1.WithAllowUpdates(System.Boolean)">
            <summary>
            Allows automatic application updates.
            </summary>
            <param name="allowUpdates">True to allow automatic updates of a Batch application, otherwise false.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Application.UpdateDefinition.IWithApplicationPackage`1">
            <summary>
            The stage of a Batch application definition allowing the creation of an application package.
            </summary>
            <typeparam name="ParentT">The stage of the parent Batch account definition to return to after attaching this definition.</typeparam>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Application.UpdateDefinition.IWithApplicationPackage`1.DefineNewApplicationPackage(System.String)">
            <summary>
            First stage to create new application package in Batch account application.
            </summary>
            <param name="version">The version of the application.</param>
            <return>Next stage to create the application.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Application.UpdateDefinition.IUpdateDefinition`1">
            <summary>
            The entirety of a Batch application definition as a part of parent update.
            </summary>
            <typeparam name="ParentT">The stage of the parent Batch account update to return to after attaching this definition.</typeparam>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Application.Update.IWithOptionalProperties">
            <summary>
            The stage of an application update allowing to enable or disable auto upgrade of the
            application.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Application.Update.IWithOptionalProperties.WithDisplayName(System.String)">
            <summary>
            Specifies the display name for the application.
            </summary>
            <param name="displayName">A display name.</param>
            <return>The next stage of the update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Application.Update.IWithOptionalProperties.WithAllowUpdates(System.Boolean)">
            <summary>
            Allows automatic application updates.
            </summary>
            <param name="allowUpdates">True to allow the automatic updates of the application, otherwise false.</param>
            <return>The next stage of the update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Application.Update.IWithApplicationPackage">
            <summary>
            The stage of a Batch application update allowing the creation of an application package.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Application.Update.IWithApplicationPackage.WithoutApplicationPackage(System.String)">
            <summary>
            Deletes specified application package from the application.
            </summary>
            <param name="version">The reference version of the application to be removed.</param>
            <return>The stage representing updatable batch account definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Application.Update.IWithApplicationPackage.DefineNewApplicationPackage(System.String)">
            <summary>
            First stage to create new application package in Batch account application.
            </summary>
            <param name="version">The version of the application.</param>
            <return>Next stage to create the application.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Application.Update.IUpdate">
            <summary>
            The entirety of a Batch application update as a part of a Batch account update.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreateAndApplication">
            <summary>
            The stage of a Batch account definition allowing the adding of a Batch application or creating the Batch account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage">
            <summary>
            The stage of a Batch account definition allowing to associate storage accounts with the Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage.WithNewStorageAccount(Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Storage.Fluent.IStorageAccount})">
            <summary>
            Specifies a new storage account to associate with the Batch account.
            </summary>
            <param name="storageAccountCreatable">A storage account to be created along with and used in the Batch account.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage.WithNewStorageAccount(System.String)">
            <summary>
            Specifies the name of a new storage account to be created and associated with this Batch account.
            </summary>
            <param name="storageAccountName">The name of a new storage account.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithStorage.WithExistingStorageAccount(Microsoft.Azure.Management.Storage.Fluent.IStorageAccount)">
            <summary>
            Specifies an existing storage account to associate with the Batch account.
            </summary>
            <param name="storageAccount">An existing storage account.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithCreate">
            <summary>
            A Batch account definition with sufficient inputs to create a new
            Batch account in the cloud, but exposing additional optional inputs to specify.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithApplicationAndStorage">
            <summary>
            The stage of a Batch account definition allowing adding an application and a storage account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IBlank">
            <summary>
            The first stage of a Batch account definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithApplication">
            <summary>
            The stage of a Batch account definition allowing the creation of a Batch application.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithApplication.DefineNewApplication(System.String)">
            <summary>
            The stage of a Batch account definition allowing to add a Batch application.
            </summary>
            <param name="applicationId">The id of the application to create.</param>
            <return>The next stage of the definition.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IWithGroup">
            <summary>
            The stage of a Batch account definition allowing the resource group to be specified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Definition.IDefinition">
            <summary>
            The entirety of a Batch account definition.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount">
            <summary>
            The stage of a Batch account update allowing to specify a storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithoutStorageAccount">
            <summary>
            Removes the associated storage account.
            </summary>
            <return>The next stage of the update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(Microsoft.Azure.Management.ResourceManager.Fluent.Core.ResourceActions.ICreatable{Microsoft.Azure.Management.Storage.Fluent.IStorageAccount})">
            <summary>
            Specifies a new storage account to create and associate with the Batch account.
            </summary>
            <param name="storageAccountCreatable">The definition of the storage account.</param>
            <return>The next stage of the update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithNewStorageAccount(System.String)">
            <summary>
            Specifies a new storage account to create and associate with the Batch account.
            </summary>
            <param name="storageAccountName">The name of a new storage account.</param>
            <return>The next stage of the update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithStorageAccount.WithExistingStorageAccount(Microsoft.Azure.Management.Storage.Fluent.IStorageAccount)">
            <summary>
            Specifies an existing storage account to associate with the Batch account.
            </summary>
            <param name="storageAccount">An existing storage account.</param>
            <return>The next stage of the update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IUpdate">
            <summary>
            The template for a Batch account update operation, containing all the settings that can be modified.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication">
            <summary>
            The stage of a Batch account definition allowing the creation of a Batch application.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication.DefineNewApplication(System.String)">
            <summary>
            Starts a definition of an application to be created in the Batch account.
            </summary>
            <param name="applicationId">The reference name for the application.</param>
            <return>The first stage of a Batch application definition.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication.WithoutApplication(System.String)">
            <summary>
            Removes the specified application from the Batch account.
            </summary>
            <param name="applicationId">The reference name for the application to be removed.</param>
            <return>The next stage of the update.</return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccount.Update.IWithApplication.UpdateApplication(System.String)">
            <summary>
            Begins the description of an update of an existing Batch application in this Batch account.
            </summary>
            <param name="applicationId">The reference name of the application to be updated.</param>
            <return>The first stage of a Batch application update.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.IApplication">
            <summary>
            An immutable client-side representation of an Azure Batch account application.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IApplication.DefaultVersion">
            <summary>
            Gets the default version for the application.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IApplication.ApplicationPackages">
            <summary>
            Gets application packages.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IApplication.UpdatesAllowed">
            <summary>
            Gets true if automatic updates are allowed, otherwise false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IApplication.DisplayName">
            <summary>
            Gets the display name of the application.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackage">
            <summary>
            An immutable client-side representation of an Azure Batch application package.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackage.Delete">
            <summary>
            Deletes the application package.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackage.State">
            <summary>
            Gets the state of the application package.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackage.Format">
            <summary>
            Gets the format of the application package.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackage.LastActivationTime">
            <summary>
            Gets the last time this application package was activated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackage.StorageUrlExpiry">
            <summary>
            Gets the expiry of the storage URL for the application package.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackage.StorageUrl">
            <summary>
            Gets the storage URL of the application package where teh application should be uploaded.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageBeta">
            <summary>
            Contains members of IApplicationPackage that are in Beta.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageBeta.Activate(System.String)">
            <summary>
            Activates the application package.
            </summary>
            <param name="format">The format of the uploaded Batch application package, either "zip" or "tar".</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageBeta.ActivateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Activates the application package asynchronously.
            </summary>
            <param name="format">The format of the uploaded Batch application package, either "zip" or "tar".</param>
            <return>A representation of the deferred computation of this call.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount">
            <summary>
            An immutable client-side representation of an Azure Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.AccountEndpoint">
            <summary>
            Gets Batch account endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.RegenerateKeys(Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType)">
            <summary>
            Regenerates the access keys for the Batch account.
            </summary>
            <param name="keyType">The type if key to regenerate.</param>
            <return>Regenerated access keys for this Batch account.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.ActiveJobAndJobScheduleQuota">
            <summary>
            Gets the active job and job schedule quota for this Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.GetKeys">
            <return>The access keys for this Batch account.</return>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.PoolQuota">
            <summary>
            Gets the pool quota for this Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.Applications">
            <summary>
            Gets applications in this Batch account, indexed by name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.AutoStorage">
            <summary>
            Gets the properties and status of any auto storage account associated with the Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.CoreQuota">
            <summary>
            Gets the core quota for this Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.ProvisioningState">
            <summary>
            Gets the provisioned state of the resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccount.SynchronizeAutoStorageKeys">
            <summary>
            Synchronizes the storage account keys for this Batch account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.IBatchAccounts">
            <summary>
            Entry point to Azure Batch account management API.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccounts.GetBatchAccountQuotaByLocation(Microsoft.Azure.Management.ResourceManager.Fluent.Core.Region)">
            <summary>
            Looks up the number of Batch accounts that can be created in the specified region.
            </summary>
            <param name="region">An Azure region.</param>
            <return>The number of Batch accounts that can be created in the specified region.</return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperations">
            <summary>
            ApplicationOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperations.#ctor(Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient)">
            <summary>
            Initializes a new instance of the ApplicationOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperations.Client">
            <summary>
            Gets a reference to the BatchManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds an application to the specified Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an application.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates settings for the specified application.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications in the specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='maxresults'>
            The maximum number of items to return in the response.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperationsExtensions">
            <summary>
            Extension methods for ApplicationOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationCreateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Adds an application to the specified Batch account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an application.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperationsExtensions.GetAsync(Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationUpdateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Updates settings for the specified application.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperationsExtensions.ListAsync(Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='maxresults'>
            The maximum number of items to return in the response.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageOperations">
            <summary>
            ApplicationPackageOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageOperations.#ctor(Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient)">
            <summary>
            Initializes a new instance of the ApplicationPackageOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageOperations.Client">
            <summary>
            Gets a reference to the BatchManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageOperations.ActivateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Activates the specified application package.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='version'>
            The version of the application to activate.
            </param>
            <param name='format'>
            The format of the application package binary file.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates an application package record.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='version'>
            The version of the application.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an application package record and its associated binary file.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='version'>
            The version of the application to delete.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application package.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='version'>
            The version of the application.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageOperationsExtensions">
            <summary>
            Extension methods for ApplicationPackageOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageOperationsExtensions.ActivateAsync(Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Activates the specified application package.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='version'>
            The version of the application to activate.
            </param>
            <param name='format'>
            The format of the application package binary file.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates an application package record.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='version'>
            The version of the application.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes an application package record and its associated binary file.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='version'>
            The version of the application to delete.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ApplicationPackageOperationsExtensions.GetAsync(Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application package.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='version'>
            The version of the application.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations">
            <summary>
            BatchAccountOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.#ctor(Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient)">
            <summary>
            Initializes a new instance of the BatchAccountOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.Client">
            <summary>
            Gets a reference to the BatchManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new Batch account with the specified parameters. Existing
            accounts cannot be updated with this API and should instead be updated with
            the Update Batch Account API.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            A name for the Batch account which must be unique within the region. Batch
            account names must be between 3 and 24 characters in length and must use
            only numbers and lowercase letters. This name is used as part of the DNS
            name that is used to access the Batch service in the region in which the
            account is created. For example:
            http://accountname.region.batch.azure.com/.
            </param>
            <param name='parameters'>
            Additional parameters for account creation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of an existing Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='parameters'>
            Additional parameters for account update.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the Batch accounts associated with the subscription.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the Batch accounts associated with the specified
            resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.SynchronizeAutoStorageKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Synchronizes access keys for the auto-storage account configured for the
            specified Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerates the specified account key for the Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='keyName'>
            The type of account key to regenerate. Possible values include: 'Primary',
            'Secondary'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.GetKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the account keys for the specified Batch account.
            </summary>
            <remarks>
            This operation applies only to Batch accounts created with a
            poolAllocationMode of 'BatchService'. If the Batch account was created with
            a poolAllocationMode of 'UserSubscription', clients cannot use access to
            keys to authenticate, and must use Azure Active Directory instead. In this
            case, getting the keys will fail.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new Batch account with the specified parameters. Existing
            accounts cannot be updated with this API and should instead be updated with
            the Update Batch Account API.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            A name for the Batch account which must be unique within the region. Batch
            account names must be between 3 and 24 characters in length and must use
            only numbers and lowercase letters. This name is used as part of the DNS
            name that is used to access the Batch service in the region in which the
            account is created. For example:
            http://accountname.region.batch.azure.com/.
            </param>
            <param name='parameters'>
            Additional parameters for account creation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the Batch accounts associated with the subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the Batch accounts associated with the specified
            resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions">
            <summary>
            Extension methods for BatchAccountOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Creates a new Batch account with the specified parameters. Existing
            accounts cannot be updated with this API and should instead be updated with
            the Update Batch Account API.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            A name for the Batch account which must be unique within the region. Batch
            account names must be between 3 and 24 characters in length and must use
            only numbers and lowercase letters. This name is used as part of the DNS
            name that is used to access the Batch service in the region in which the
            account is created. For example:
            http://accountname.region.batch.azure.com/.
            </param>
            <param name='parameters'>
            Additional parameters for account creation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountUpdateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of an existing Batch account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='parameters'>
            Additional parameters for account update.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Batch account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.GetAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified Batch account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.ListAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.Threading.CancellationToken)">
            <summary>
            Gets information about the Batch accounts associated with the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about the Batch accounts associated with the specified
            resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.SynchronizeAutoStorageKeysAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Synchronizes access keys for the auto-storage account configured for the
            specified Batch account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType,System.Threading.CancellationToken)">
            <summary>
            Regenerates the specified account key for the Batch account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='keyName'>
            The type of account key to regenerate. Possible values include: 'Primary',
            'Secondary'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.GetKeysAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the account keys for the specified Batch account.
            </summary>
            <remarks>
            This operation applies only to Batch accounts created with a
            poolAllocationMode of 'BatchService'. If the Batch account was created with
            a poolAllocationMode of 'UserSubscription', clients cannot use access to
            keys to authenticate, and must use Azure Active Directory instead. In this
            case, getting the keys will fail.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner,System.Threading.CancellationToken)">
            <summary>
            Creates a new Batch account with the specified parameters. Existing
            accounts cannot be updated with this API and should instead be updated with
            the Update Batch Account API.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            A name for the Batch account which must be unique within the region. Batch
            account names must be between 3 and 24 characters in length and must use
            only numbers and lowercase letters. This name is used as part of the DNS
            name that is used to access the Batch service in the region in which the
            account is created. For example:
            http://accountname.region.batch.azure.com/.
            </param>
            <param name='parameters'>
            Additional parameters for account creation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Batch account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about the Batch accounts associated with the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchAccountOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about the Batch accounts associated with the specified
            resource group.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.SubscriptionId">
            <summary>
            The Azure subscription ID. This is a GUID-formatted string (e.g.
            00000000-0000-0000-0000-000000000000)
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.ApiVersion">
            <summary>
            The API version to be used with the HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running Operations.
            Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.BatchAccount">
            <summary>
            Gets the IBatchAccountOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.ApplicationPackage">
            <summary>
            Gets the IApplicationPackageOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.Application">
            <summary>
            Gets the IApplicationOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.Location">
            <summary>
            Gets the ILocationOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.Certificate">
            <summary>
            Gets the ICertificateOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.Pool">
            <summary>
            Gets the IPoolOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.#ctor(Microsoft.Azure.Management.ResourceManager.Fluent.Core.RestClient)">
            <summary>
            Initializes a new instance of the BatchManagementClient class.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.CertificateOperations">
            <summary>
            CertificateOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperations.#ctor(Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient)">
            <summary>
            Initializes a new instance of the CertificateOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.CertificateOperations.Client">
            <summary>
            Gets a reference to the BatchManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperations.ListByBatchAccountWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates in the specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='maxresults'>
            The maximum number of items to return in the response.
            </param>
            <param name='select'>
            Comma separated list of properties that should be returned. e.g.
            "properties/provisioningState". Only top level properties under properties/
            are valid for selection.
            </param>
            <param name='filter'>
            OData filter expression. Valid properties for filtering are
            "properties/provisioningState",
            "properties/provisioningStateTransitionTime", "name".
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new certificate inside the specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='parameters'>
            Additional parameters for certificate creation.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the certificate to update. A value of
            "*" can be used to apply the operation only if the certificate already
            exists. If omitted, this operation will always be applied.
            </param>
            <param name='ifNoneMatch'>
            Set to '*' to allow a new certificate to be created, but to prevent
            updating an existing certificate. Other values will be ignored.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of an existing certificate.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='parameters'>
            Certificate entity to update.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the certificate to update. This value
            can be omitted or set to "*" to apply the operation unconditionally.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified certificate.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperations.CancelDeletionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of a certificate from the specified account.
            </summary>
            <remarks>
            If you try to delete a certificate that is being used by a pool or compute
            node, the status of the certificate changes to deleteFailed. If you decide
            that you want to continue using the certificate, you can use this operation
            to set the status of the certificate back to active. If you intend to
            delete the certificate, you do not need to run this operation after the
            deletion failed. You must make sure that the certificate is not being used
            by any resources, and then you can try again to delete the certificate.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new certificate inside the specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='parameters'>
            Additional parameters for certificate creation.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the certificate to update. A value of
            "*" can be used to apply the operation only if the certificate already
            exists. If omitted, this operation will always be applied.
            </param>
            <param name='ifNoneMatch'>
            Set to '*' to allow a new certificate to be created, but to prevent
            updating an existing certificate. Other values will be ignored.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified certificate.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperations.ListByBatchAccountNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions">
            <summary>
            Extension methods for CertificateOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.ListByBatchAccountAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='maxresults'>
            The maximum number of items to return in the response.
            </param>
            <param name='select'>
            Comma separated list of properties that should be returned. e.g.
            "properties/provisioningState". Only top level properties under properties/
            are valid for selection.
            </param>
            <param name='filter'>
            OData filter expression. Valid properties for filtering are
            "properties/provisioningState",
            "properties/provisioningStateTransitionTime", "name".
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new certificate inside the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='parameters'>
            Additional parameters for certificate creation.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the certificate to update. A value of
            "*" can be used to apply the operation only if the certificate already
            exists. If omitted, this operation will always be applied.
            </param>
            <param name='ifNoneMatch'>
            Set to '*' to allow a new certificate to be created, but to prevent
            updating an existing certificate. Other values will be ignored.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner,System.String,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of an existing certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='parameters'>
            Certificate entity to update.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the certificate to update. This value
            can be omitted or set to "*" to apply the operation unconditionally.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.GetAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.CancelDeletionAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of a certificate from the specified account.
            </summary>
            <remarks>
            If you try to delete a certificate that is being used by a pool or compute
            node, the status of the certificate changes to deleteFailed. If you decide
            that you want to continue using the certificate, you can use this operation
            to set the status of the certificate back to active. If you intend to
            delete the certificate, you do not need to run this operation after the
            deletion failed. You must make sure that the certificate is not being used
            by any resources, and then you can try again to delete the certificate.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new certificate inside the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='parameters'>
            Additional parameters for certificate creation.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the certificate to update. A value of
            "*" can be used to apply the operation only if the certificate already
            exists. If omitted, this operation will always be applied.
            </param>
            <param name='ifNoneMatch'>
            Set to '*' to allow a new certificate to be created, but to prevent
            updating an existing certificate. Other values will be ignored.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified certificate.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of algorithm and
            thumbprint separated by a dash, and must match the certificate data in the
            request. For example SHA1-a3d1c5.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.CertificateOperationsExtensions.ListByBatchAccountNextAsync(Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations">
            <summary>
            ApplicationOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Adds an application to the specified Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an application.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates settings for the specified application.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='parameters'>
            The parameters for the request.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications in the specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='maxresults'>
            The maximum number of items to return in the response.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the applications in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageOperations">
            <summary>
            ApplicationPackageOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageOperations.ActivateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Activates the specified application package.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='version'>
            The version of the application to activate.
            </param>
            <param name='format'>
            The format of the application package binary file.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates an application package record.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='version'>
            The version of the application.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes an application package record and its associated binary
            file.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='version'>
            The version of the application to delete.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IApplicationPackageOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified application package.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='applicationId'>
            The ID of the application.
            </param>
            <param name='version'>
            The version of the application.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations">
            <summary>
            BatchAccountOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new Batch account with the specified parameters. Existing
            accounts cannot be updated with this API and should instead be
            updated with the Update Batch Account API.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            A name for the Batch account which must be unique within the
            region. Batch account names must be between 3 and 24 characters in
            length and must use only numbers and lowercase letters. This name
            is used as part of the DNS name that is used to access the Batch
            service in the region in which the account is created. For example:
            http://accountname.region.batch.azure.com/.
            </param>
            <param name='parameters'>
            Additional parameters for account creation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountUpdateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of an existing Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='parameters'>
            Additional parameters for account update.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the Batch accounts associated with the
            subscription.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the Batch accounts associated with the
            specified resource group.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.SynchronizeAutoStorageKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Synchronizes access keys for the auto-storage account configured
            for the specified Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerates the specified account key for the Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='keyName'>
            The type of account key to regenerate. Possible values include:
            'Primary', 'Secondary'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.GetKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the account keys for the specified Batch account.
            </summary>
            <remarks>
            This operation applies only to Batch accounts created with a
            poolAllocationMode of 'BatchService'. If the Batch account was
            created with a poolAllocationMode of 'UserSubscription', clients
            cannot use access to keys to authenticate, and must use Azure
            Active Directory instead. In this case, getting the keys will fail.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new Batch account with the specified parameters. Existing
            accounts cannot be updated with this API and should instead be
            updated with the Update Batch Account API.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            A name for the Batch account which must be unique within the
            region. Batch account names must be between 3 and 24 characters in
            length and must use only numbers and lowercase letters. This name
            is used as part of the DNS name that is used to access the Batch
            service in the region in which the account is created. For example:
            http://accountname.region.batch.azure.com/.
            </param>
            <param name='parameters'>
            Additional parameters for account creation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified Batch account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the Batch accounts associated with the
            subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IBatchAccountOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the Batch accounts associated with the
            specified resource group.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.SubscriptionId">
            <summary>
            The Azure subscription ID. This is a GUID-formatted string (e.g.
            00000000-0000-0000-0000-000000000000)
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.ApiVersion">
            <summary>
            The API version to be used with the HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.AcceptLanguage">
            <summary>
            Gets or sets the preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            Gets or sets the retry timeout in seconds for Long Running
            Operations. Default value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.GenerateClientRequestId">
            <summary>
            When set to true a unique x-ms-client-request-id value is generated
            and included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.BatchAccount">
            <summary>
            Gets the IBatchAccountOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.ApplicationPackage">
            <summary>
            Gets the IApplicationPackageOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.Application">
            <summary>
            Gets the IApplicationOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.Location">
            <summary>
            Gets the ILocationOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.Certificate">
            <summary>
            Gets the ICertificateOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.IBatchManagementClient.Pool">
            <summary>
            Gets the IPoolOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations">
            <summary>
            CertificateOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations.ListByBatchAccountWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates in the specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='maxresults'>
            The maximum number of items to return in the response.
            </param>
            <param name='select'>
            Comma separated list of properties that should be returned. e.g.
            "properties/provisioningState". Only top level properties under
            properties/ are valid for selection.
            </param>
            <param name='filter'>
            OData filter expression. Valid properties for filtering are
            "properties/provisioningState",
            "properties/provisioningStateTransitionTime", "name".
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new certificate inside the specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of
            algorithm and thumbprint separated by a dash, and must match the
            certificate data in the request. For example SHA1-a3d1c5.
            </param>
            <param name='parameters'>
            Additional parameters for certificate creation.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the certificate to update. A
            value of "*" can be used to apply the operation only if the
            certificate already exists. If omitted, this operation will always
            be applied.
            </param>
            <param name='ifNoneMatch'>
            Set to '*' to allow a new certificate to be created, but to prevent
            updating an existing certificate. Other values will be ignored.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of an existing certificate.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of
            algorithm and thumbprint separated by a dash, and must match the
            certificate data in the request. For example SHA1-a3d1c5.
            </param>
            <param name='parameters'>
            Certificate entity to update.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the certificate to update. This
            value can be omitted or set to "*" to apply the operation
            unconditionally.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified certificate.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of
            algorithm and thumbprint separated by a dash, and must match the
            certificate data in the request. For example SHA1-a3d1c5.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified certificate.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of
            algorithm and thumbprint separated by a dash, and must match the
            certificate data in the request. For example SHA1-a3d1c5.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations.CancelDeletionWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Cancels a failed deletion of a certificate from the specified
            account.
            </summary>
            <remarks>
            If you try to delete a certificate that is being used by a pool or
            compute node, the status of the certificate changes to
            deleteFailed. If you decide that you want to continue using the
            certificate, you can use this operation to set the status of the
            certificate back to active. If you intend to delete the
            certificate, you do not need to run this operation after the
            deletion failed. You must make sure that the certificate is not
            being used by any resources, and then you can try again to delete
            the certificate.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of
            algorithm and thumbprint separated by a dash, and must match the
            certificate data in the request. For example SHA1-a3d1c5.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new certificate inside the specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of
            algorithm and thumbprint separated by a dash, and must match the
            certificate data in the request. For example SHA1-a3d1c5.
            </param>
            <param name='parameters'>
            Additional parameters for certificate creation.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the certificate to update. A
            value of "*" can be used to apply the operation only if the
            certificate already exists. If omitted, this operation will always
            be applied.
            </param>
            <param name='ifNoneMatch'>
            Set to '*' to allow a new certificate to be created, but to prevent
            updating an existing certificate. Other values will be ignored.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified certificate.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='certificateName'>
            The identifier for the certificate. This must be made up of
            algorithm and thumbprint separated by a dash, and must match the
            certificate data in the request. For example SHA1-a3d1c5.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ICertificateOperations.ListByBatchAccountNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the certificates in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.ILocationOperations">
            <summary>
            LocationOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ILocationOperations.GetQuotasWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the Batch service quotas for the specified subscription at the
            given location.
            </summary>
            <param name='locationName'>
            The region for which to retrieve Batch service quotas.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.ILocationOperations.CheckNameAvailabilityWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether the Batch account name is available in the specified
            region.
            </summary>
            <param name='locationName'>
            The desired region for the name check.
            </param>
            <param name='name'>
            The name to check for availability
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.IOperations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists available operations for the Microsoft.Batch provider
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists available operations for the Microsoft.Batch provider
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.IPoolOperations">
            <summary>
            PoolOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IPoolOperations.ListByBatchAccountWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Lists all of the pools in the specified account.
             </summary>
             <param name='resourceGroupName'>
             The name of the resource group that contains the Batch account.
             </param>
             <param name='accountName'>
             The name of the Batch account.
             </param>
             <param name='maxresults'>
             The maximum number of items to return in the response.
             </param>
             <param name='select'>
             Comma separated list of properties that should be returned. e.g.
             "properties/provisioningState". Only top level properties under
             properties/ are valid for selection.
             </param>
             <param name='filter'>
             OData filter expression. Valid properties for filtering are:
            
             name
             properties/allocationState
             properties/allocationStateTransitionTime
             properties/creationTime
             properties/provisioningState
             properties/provisioningStateTransitionTime
             properties/lastModified
             properties/vmSize
             properties/interNodeCommunication
             properties/scaleSettings/autoScale
             properties/scaleSettings/fixedScale
             </param>
             <param name='customHeaders'>
             The headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.Rest.Azure.CloudException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IPoolOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new pool inside the specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='parameters'>
            Additional parameters for pool creation.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the pool to update. A value of
            "*" can be used to apply the operation only if the pool already
            exists. If omitted, this operation will always be applied.
            </param>
            <param name='ifNoneMatch'>
            Set to '*' to allow a new pool to be created, but to prevent
            updating an existing pool. Other values will be ignored.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IPoolOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of an existing pool.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='parameters'>
            Pool properties that should be updated. Properties that are
            supplied will be updated, any property not supplied will be
            unchanged.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the pool to update. This value
            can be omitted or set to "*" to apply the operation
            unconditionally.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IPoolOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified pool.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IPoolOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IPoolOperations.DisableAutoScaleWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IPoolOperations.StopResizeWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Stops an ongoing resize operation on the pool.
            </summary>
            <remarks>
            This does not restore the pool to its previous state before the
            resize operation: it only stops any further changes being made, and
            the pool maintains its current state. After stopping, the pool
            stabilizes at the number of nodes it was at when the stop operation
            was done. During the stop operation, the pool allocation state
            changes first to stopping and then to steady. A resize operation
            need not be an explicit resize pool request; this API can also be
            used to halt the initial sizing of the pool when it is created.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IPoolOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new pool inside the specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='parameters'>
            Additional parameters for pool creation.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the pool to update. A value of
            "*" can be used to apply the operation only if the pool already
            exists. If omitted, this operation will always be applied.
            </param>
            <param name='ifNoneMatch'>
            Set to '*' to allow a new pool to be created, but to prevent
            updating an existing pool. Other values will be ignored.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IPoolOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified pool.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.IPoolOperations.ListByBatchAccountNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.LocationOperations">
            <summary>
            LocationOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.LocationOperations.#ctor(Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient)">
            <summary>
            Initializes a new instance of the LocationOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.LocationOperations.Client">
            <summary>
            Gets a reference to the BatchManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.LocationOperations.GetQuotasWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the Batch service quotas for the specified subscription at the given
            location.
            </summary>
            <param name='locationName'>
            The region for which to retrieve Batch service quotas.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.LocationOperations.CheckNameAvailabilityWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks whether the Batch account name is available in the specified region.
            </summary>
            <param name='locationName'>
            The desired region for the name check.
            </param>
            <param name='name'>
            The name to check for availability
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.LocationOperationsExtensions">
            <summary>
            Extension methods for LocationOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.LocationOperationsExtensions.GetQuotasAsync(Microsoft.Azure.Management.Batch.Fluent.ILocationOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the Batch service quotas for the specified subscription at the given
            location.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='locationName'>
            The region for which to retrieve Batch service quotas.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.LocationOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Batch.Fluent.ILocationOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks whether the Batch account name is available in the specified region.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='locationName'>
            The desired region for the name check.
            </param>
            <param name='name'>
            The name to check for availability
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType">
            <summary>
            Defines values for AccountKeyType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ActivateApplicationPackageParameters">
            <summary>
            Parameters for an activating an application package.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ActivateApplicationPackageParameters.#ctor">
            <summary>
            Initializes a new instance of the
            ActivateApplicationPackageParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ActivateApplicationPackageParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            ActivateApplicationPackageParameters class.
            </summary>
            <param name="format">The format of the application package binary
            file.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ActivateApplicationPackageParameters.Format">
            <summary>
            Gets or sets the format of the application package binary file.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ActivateApplicationPackageParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.AllocationState">
            <summary>
            Defines values for AllocationState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationCreateParametersInner">
            <summary>
            Parameters for adding an Application.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationCreateParametersInner.#ctor">
            <summary>
            Initializes a new instance of the ApplicationCreateParametersInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationCreateParametersInner.#ctor(System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the ApplicationCreateParametersInner
            class.
            </summary>
            <param name="allowUpdates">A value indicating whether packages
            within the application may be overwritten using the same version
            string.</param>
            <param name="displayName">The display name for the
            application.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationCreateParametersInner.AllowUpdates">
            <summary>
            Gets or sets a value indicating whether packages within the
            application may be overwritten using the same version string.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationCreateParametersInner.DisplayName">
            <summary>
            Gets or sets the display name for the application.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationInner">
            <summary>
            Contains information about an application in a Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationInner.#ctor">
            <summary>
            Initializes a new instance of the ApplicationInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationInner.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageInner},System.Nullable{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the ApplicationInner class.
            </summary>
            <param name="id">A string that uniquely identifies the application
            within the account.</param>
            <param name="displayName">The display name for the
            application.</param>
            <param name="packages">The list of packages under this
            application.</param>
            <param name="allowUpdates">A value indicating whether packages
            within the application may be overwritten using the same version
            string.</param>
            <param name="defaultVersion">The package to use if a client
            requests the application but does not specify a version.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationInner.Id">
            <summary>
            Gets or sets a string that uniquely identifies the application
            within the account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationInner.DisplayName">
            <summary>
            Gets or sets the display name for the application.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationInner.Packages">
            <summary>
            Gets or sets the list of packages under this application.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationInner.AllowUpdates">
            <summary>
            Gets or sets a value indicating whether packages within the
            application may be overwritten using the same version string.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationInner.DefaultVersion">
            <summary>
            Gets or sets the package to use if a client requests the
            application but does not specify a version.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageInner">
            <summary>
            An application package which represents a particular version of an
            application.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageInner.#ctor">
            <summary>
            Initializes a new instance of the ApplicationPackageInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageInner.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.PackageState},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ApplicationPackageInner class.
            </summary>
            <param name="id">The ID of the application.</param>
            <param name="version">The version of the application
            package.</param>
            <param name="state">The current state of the application package.
            Possible values include: 'Pending', 'Active', 'Unmapped'</param>
            <param name="format">The format of the application package, if the
            package is active.</param>
            <param name="storageUrl">The URL for the application package in
            Azure Storage.</param>
            <param name="storageUrlExpiry">The UTC time at which the Azure
            Storage URL will expire.</param>
            <param name="lastActivationTime">The time at which the package was
            last activated, if the package is active.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageInner.Id">
            <summary>
            Gets the ID of the application.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageInner.Version">
            <summary>
            Gets the version of the application package.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageInner.State">
            <summary>
            Gets the current state of the application package. Possible values
            include: 'Pending', 'Active', 'Unmapped'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageInner.Format">
            <summary>
            Gets the format of the application package, if the package is
            active.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageInner.StorageUrl">
            <summary>
            Gets the URL for the application package in Azure Storage.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageInner.StorageUrlExpiry">
            <summary>
            Gets the UTC time at which the Azure Storage URL will expire.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageInner.LastActivationTime">
            <summary>
            Gets the time at which the package was last activated, if the
            package is active.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageReference">
            <summary>
            Link to an application package inside the batch account
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageReference.#ctor">
            <summary>
            Initializes a new instance of the ApplicationPackageReference
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ApplicationPackageReference
            class.
            </summary>
            <param name="id">The ID of the application package to install. This
            must be inside the same batch account as the pool. This can either
            be a reference to a specific version or the default version if one
            exists.</param>
            <param name="version">The version of the application to deploy. If
            omitted, the default version is deployed.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageReference.Id">
            <summary>
            Gets or sets the ID of the application package to install. This
            must be inside the same batch account as the pool. This can either
            be a reference to a specific version or the default version if one
            exists.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageReference.Version">
            <summary>
            Gets or sets the version of the application to deploy. If omitted,
            the default version is deployed.
            </summary>
            <remarks>
            If this is omitted, and no default version is specified for this
            application, the request fails with the error code
            InvalidApplicationPackageReferences. If you are calling the REST
            API directly, the HTTP status code is 409.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageReference.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationUpdateParametersInner">
            <summary>
            Parameters for an update application request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationUpdateParametersInner.#ctor">
            <summary>
            Initializes a new instance of the ApplicationUpdateParametersInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationUpdateParametersInner.#ctor(System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Initializes a new instance of the ApplicationUpdateParametersInner
            class.
            </summary>
            <param name="allowUpdates">A value indicating whether packages
            within the application may be overwritten using the same version
            string.</param>
            <param name="defaultVersion">The package to use if a client
            requests the application but does not specify a version.</param>
            <param name="displayName">The display name for the
            application.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationUpdateParametersInner.AllowUpdates">
            <summary>
            Gets or sets a value indicating whether packages within the
            application may be overwritten using the same version string.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationUpdateParametersInner.DefaultVersion">
            <summary>
            Gets or sets the package to use if a client requests the
            application but does not specify a version.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationUpdateParametersInner.DisplayName">
            <summary>
            Gets or sets the display name for the application.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRun">
            <summary>
            The results and errors from an execution of a pool autoscale formula.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRun.#ctor">
            <summary>
            Initializes a new instance of the AutoScaleRun class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRun.#ctor(System.DateTime,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRunError)">
            <summary>
            Initializes a new instance of the AutoScaleRun class.
            </summary>
            <param name="evaluationTime">The time at which the autoscale
            formula was last evaluated.</param>
            <param name="results">The final values of all variables used in the
            evaluation of the autoscale formula.</param>
            <param name="error">Details of the error encountered evaluating the
            autoscale formula on the pool, if the evaluation was
            unsuccessful.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRun.EvaluationTime">
            <summary>
            Gets or sets the time at which the autoscale formula was last
            evaluated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRun.Results">
            <summary>
            Gets or sets the final values of all variables used in the
            evaluation of the autoscale formula.
            </summary>
            <remarks>
            Each variable value is returned in the form $variable=value, and
            variables are separated by semicolons.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRun.Error">
            <summary>
            Gets or sets details of the error encountered evaluating the
            autoscale formula on the pool, if the evaluation was unsuccessful.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRun.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRunError">
            <summary>
            An error that occurred when autoscaling a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRunError.#ctor">
            <summary>
            Initializes a new instance of the AutoScaleRunError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRunError.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRunError})">
            <summary>
            Initializes a new instance of the AutoScaleRunError class.
            </summary>
            <param name="code">An identifier for the error. Codes are invariant
            and are intended to be consumed programmatically.</param>
            <param name="message">A message describing the error, intended to
            be suitable for display in a user interface.</param>
            <param name="details">Additional details about the error.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRunError.Code">
            <summary>
            Gets or sets an identifier for the error. Codes are invariant and
            are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRunError.Message">
            <summary>
            Gets or sets a message describing the error, intended to be
            suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRunError.Details">
            <summary>
            Gets or sets additional details about the error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRunError.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleSettings">
            <summary>
            AutoScale settings for the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleSettings.#ctor">
            <summary>
            Initializes a new instance of the AutoScaleSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleSettings.#ctor(System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the AutoScaleSettings class.
            </summary>
            <param name="formula">A formula for the desired number of compute
            nodes in the pool.</param>
            <param name="evaluationInterval">The time interval at which to
            automatically adjust the pool size according to the autoscale
            formula.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleSettings.Formula">
            <summary>
            Gets or sets a formula for the desired number of compute nodes in
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleSettings.EvaluationInterval">
            <summary>
            Gets or sets the time interval at which to automatically adjust the
            pool size according to the autoscale formula.
            </summary>
            <remarks>
            If omitted, the default value is 15 minutes (PT15M).
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageBaseProperties">
            <summary>
            The properties related to the auto-storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageBaseProperties.#ctor">
            <summary>
            Initializes a new instance of the AutoStorageBaseProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageBaseProperties.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AutoStorageBaseProperties class.
            </summary>
            <param name="storageAccountId">The resource ID of the storage
            account to be used for auto-storage account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageBaseProperties.StorageAccountId">
            <summary>
            Gets or sets the resource ID of the storage account to be used for
            auto-storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageBaseProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageProperties">
            <summary>
            Contains information about the auto-storage account associated with a
            Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageProperties.#ctor">
            <summary>
            Initializes a new instance of the AutoStorageProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageProperties.#ctor(System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the AutoStorageProperties class.
            </summary>
            <param name="storageAccountId">The resource ID of the storage
            account to be used for auto-storage account.</param>
            <param name="lastKeySync">The UTC time at which storage keys were
            last synchronized with the Batch account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageProperties.LastKeySync">
            <summary>
            Gets or sets the UTC time at which storage keys were last
            synchronized with the Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.AutoUserScope">
            <summary>
            Defines values for AutoUserScope.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.AutoUserSpecification">
            <summary>
            Specifies the parameters for the auto user that runs a task on the
            Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoUserSpecification.#ctor">
            <summary>
            Initializes a new instance of the AutoUserSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.AutoUserSpecification.#ctor(System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.AutoUserScope},System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.ElevationLevel})">
            <summary>
            Initializes a new instance of the AutoUserSpecification class.
            </summary>
            <param name="scope">The scope for the auto user</param>
            <param name="elevationLevel">The elevation level of the auto
            user.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.AutoUserSpecification.Scope">
            <summary>
            Gets or sets the scope for the auto user
            </summary>
            <remarks>
            pool - specifies that the task runs as the common auto user account
            which is created on every node in a pool. task - specifies that the
            service should create a new user for the task. The default value is
            task. Possible values include: 'Task', 'Pool'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.AutoUserSpecification.ElevationLevel">
            <summary>
            Gets or sets the elevation level of the auto user.
            </summary>
            <remarks>
            nonAdmin - The auto user is a standard user without elevated
            access. admin - The auto user is a user with elevated access and
            operates with full Administrator permissions. The default value is
            nonAdmin. Possible values include: 'NonAdmin', 'Admin'
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateHeadersInner">
            <summary>
            Defines headers for Create operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the BatchAccountCreateHeadersInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateHeadersInner.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the BatchAccountCreateHeadersInner
            class.
            </summary>
            <param name="location">The URL of the resource used to check the
            status of the asynchronous operation.</param>
            <param name="retryAfter">Suggested delay to check the status of the
            asynchronous operation. The value is an integer that specifies the
            delay in seconds.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateHeadersInner.Location">
            <summary>
            Gets or sets the URL of the resource used to check the status of
            the asynchronous operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateHeadersInner.RetryAfter">
            <summary>
            Gets or sets suggested delay to check the status of the
            asynchronous operation. The value is an integer that specifies the
            delay in seconds.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner">
            <summary>
            Parameters supplied to the Create operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner.#ctor">
            <summary>
            Initializes a new instance of the BatchAccountCreateParametersInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageBaseProperties,System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.PoolAllocationMode},Microsoft.Azure.Management.Batch.Fluent.Models.KeyVaultReference)">
            <summary>
            Initializes a new instance of the BatchAccountCreateParametersInner
            class.
            </summary>
            <param name="location">The region in which to create the
            account.</param>
            <param name="tags">The user-specified tags associated with the
            account.</param>
            <param name="autoStorage">The properties related to the
            auto-storage account.</param>
            <param name="poolAllocationMode">The allocation mode to use for
            creating pools in the Batch account.</param>
            <param name="keyVaultReference">A reference to the Azure key vault
            associated with the Batch account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner.Location">
            <summary>
            Gets or sets the region in which to create the account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner.Tags">
            <summary>
            Gets or sets the user-specified tags associated with the account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner.AutoStorage">
            <summary>
            Gets or sets the properties related to the auto-storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner.PoolAllocationMode">
            <summary>
            Gets or sets the allocation mode to use for creating pools in the
            Batch account.
            </summary>
            <remarks>
            The pool allocation mode also affects how clients may authenticate
            to the Batch Service API. If the mode is BatchService, clients may
            authenticate using access keys or Azure Active Directory. If the
            mode is UserSubscription, clients must use Azure Active Directory.
            The default is BatchService. Possible values include:
            'BatchService', 'UserSubscription'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner.KeyVaultReference">
            <summary>
            Gets or sets a reference to the Azure key vault associated with the
            Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountCreateParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountDeleteHeadersInner">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountDeleteHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the BatchAccountDeleteHeadersInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountDeleteHeadersInner.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the BatchAccountDeleteHeadersInner
            class.
            </summary>
            <param name="location">The URL of the resource used to check the
            status of the asynchronous operation.</param>
            <param name="retryAfter">Suggested delay to check the status of the
            asynchronous operation. The value is an integer that specifies the
            delay in seconds.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountDeleteHeadersInner.Location">
            <summary>
            Gets or sets the URL of the resource used to check the status of
            the asynchronous operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountDeleteHeadersInner.RetryAfter">
            <summary>
            Gets or sets suggested delay to check the status of the
            asynchronous operation. The value is an integer that specifies the
            delay in seconds.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner">
            <summary>
            Contains information about an Azure Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner.#ctor">
            <summary>
            Initializes a new instance of the BatchAccountInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Azure.Management.Batch.Fluent.Models.ProvisioningState,System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.PoolAllocationMode},Microsoft.Azure.Management.Batch.Fluent.Models.KeyVaultReference,Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageProperties,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the BatchAccountInner class.
            </summary>
            <param name="accountEndpoint">The account endpoint used to interact
            with the Batch service.</param>
            <param name="provisioningState">The provisioned state of the
            resource. Possible values include: 'Invalid', 'Creating',
            'Deleting', 'Succeeded', 'Failed', 'Cancelled'</param>
            <param name="poolAllocationMode">The allocation mode to use for
            creating pools in the Batch account.</param>
            <param name="keyVaultReference">A reference to the Azure key vault
            associated with the Batch account.</param>
            <param name="autoStorage">The properties and status of any
            auto-storage account associated with the Batch account.</param>
            <param name="dedicatedCoreQuota">The dedicated core quota for this
            Batch account.</param>
            <param name="lowPriorityCoreQuota">The low-priority core quota for
            this Batch account.</param>
            <param name="poolQuota">The pool quota for this Batch
            account.</param>
            <param name="activeJobAndJobScheduleQuota">The active job and job
            schedule quota for this Batch account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner.AccountEndpoint">
            <summary>
            Gets the account endpoint used to interact with the Batch service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner.ProvisioningState">
            <summary>
            Gets the provisioned state of the resource. Possible values
            include: 'Invalid', 'Creating', 'Deleting', 'Succeeded', 'Failed',
            'Cancelled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner.PoolAllocationMode">
            <summary>
            Gets the allocation mode to use for creating pools in the Batch
            account.
            </summary>
            <remarks>
            Possible values include: 'BatchService', 'UserSubscription'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner.KeyVaultReference">
            <summary>
            Gets a reference to the Azure key vault associated with the Batch
            account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner.AutoStorage">
            <summary>
            Gets the properties and status of any auto-storage account
            associated with the Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner.DedicatedCoreQuota">
            <summary>
            Gets the dedicated core quota for this Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner.LowPriorityCoreQuota">
            <summary>
            Gets the low-priority core quota for this Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner.PoolQuota">
            <summary>
            Gets the pool quota for this Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner.ActiveJobAndJobScheduleQuota">
            <summary>
            Gets the active job and job schedule quota for this Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountKeysInner">
            <summary>
            A set of Azure Batch account keys.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountKeysInner.#ctor">
            <summary>
            Initializes a new instance of the BatchAccountKeysInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountKeysInner.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the BatchAccountKeysInner class.
            </summary>
            <param name="accountName">The Batch account name.</param>
            <param name="primary">The primary key associated with the
            account.</param>
            <param name="secondary">The secondary key associated with the
            account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountKeysInner.AccountName">
            <summary>
            Gets the Batch account name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountKeysInner.Primary">
            <summary>
            Gets the primary key associated with the account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountKeysInner.Secondary">
            <summary>
            Gets the secondary key associated with the account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountRegenerateKeyParameters">
            <summary>
            Parameters supplied to the RegenerateKey operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountRegenerateKeyParameters.#ctor">
            <summary>
            Initializes a new instance of the
            BatchAccountRegenerateKeyParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountRegenerateKeyParameters.#ctor(Microsoft.Azure.Management.Batch.Fluent.Models.AccountKeyType)">
            <summary>
            Initializes a new instance of the
            BatchAccountRegenerateKeyParameters class.
            </summary>
            <param name="keyName">The type of account key to regenerate.
            Possible values include: 'Primary', 'Secondary'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountRegenerateKeyParameters.KeyName">
            <summary>
            Gets or sets the type of account key to regenerate. Possible values
            include: 'Primary', 'Secondary'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountRegenerateKeyParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountUpdateParametersInner">
            <summary>
            Parameters for updating an Azure Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountUpdateParametersInner.#ctor">
            <summary>
            Initializes a new instance of the BatchAccountUpdateParametersInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountUpdateParametersInner.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Batch.Fluent.Models.AutoStorageBaseProperties)">
            <summary>
            Initializes a new instance of the BatchAccountUpdateParametersInner
            class.
            </summary>
            <param name="tags">The user-specified tags associated with the
            account.</param>
            <param name="autoStorage">The properties related to the
            auto-storage account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountUpdateParametersInner.Tags">
            <summary>
            Gets or sets the user-specified tags associated with the account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountUpdateParametersInner.AutoStorage">
            <summary>
            Gets or sets the properties related to the auto-storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchAccountUpdateParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.BatchLocationQuotaInner">
            <summary>
            Quotas associated with a Batch region for a particular subscription.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchLocationQuotaInner.#ctor">
            <summary>
            Initializes a new instance of the BatchLocationQuotaInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.BatchLocationQuotaInner.#ctor(System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the BatchLocationQuotaInner class.
            </summary>
            <param name="accountQuota">The number of Batch accounts that may be
            created under the subscription in the specified region.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.BatchLocationQuotaInner.AccountQuota">
            <summary>
            Gets the number of Batch accounts that may be created under the
            subscription in the specified region.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CachingType">
            <summary>
            Defines values for CachingType.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateBaseProperties.#ctor">
            <summary>
            Initializes a new instance of the CertificateBaseProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateBaseProperties.#ctor(System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateFormat)">
            <summary>
            Initializes a new instance of the CertificateBaseProperties class.
            </summary>
            <param name="thumbprintAlgorithm">The algorithm of the certificate
            thumbprint</param>
            <param name="thumbprint">The thumbprint of the certificate</param>
            <param name="format">The format of the certificate - either Pfx or
            Cer. If omitted, the default is Pfx. Possible values include:
            'Pfx', 'Cer'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateBaseProperties.ThumbprintAlgorithm">
            <summary>
            Gets or sets the algorithm of the certificate thumbprint
            </summary>
            <remarks>
            This must match the first portion of the certificate name.
            Currently required to be 'SHA1'.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateBaseProperties.Thumbprint">
            <summary>
            Gets or sets the thumbprint of the certificate
            </summary>
            <remarks>
            This must match the thumbprint from the name.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateBaseProperties.Format">
            <summary>
            Gets or sets the format of the certificate - either Pfx or Cer. If
            omitted, the default is Pfx. Possible values include: 'Pfx', 'Cer'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCancelDeletionHeadersInner">
            <summary>
            Defines headers for CancelDeletion operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCancelDeletionHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the
            CertificateCancelDeletionHeadersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCancelDeletionHeadersInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            CertificateCancelDeletionHeadersInner class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCancelDeletionHeadersInner.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateHeadersInner">
            <summary>
            Defines headers for Create operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the CertificateCreateHeadersInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateHeadersInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CertificateCreateHeadersInner
            class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateHeadersInner.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner">
            <summary>
            Contains information about a certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner.#ctor">
            <summary>
            Initializes a new instance of the
            CertificateCreateOrUpdateParametersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateFormat,System.String)">
            <summary>
            Initializes a new instance of the
            CertificateCreateOrUpdateParametersInner class.
            </summary>
            <param name="data">The base64-encoded contents of the
            certificate.</param>
            <param name="id">The ID of the resource.</param>
            <param name="name">The name of the resource.</param>
            <param name="type">The type of the resource.</param>
            <param name="etag">The ETag of the resource, used for concurrency
            statements.</param>
            <param name="thumbprintAlgorithm">The algorithm of the certificate
            thumbprint</param>
            <param name="thumbprint">The thumbprint of the certificate</param>
            <param name="format">The format of the certificate - either Pfx or
            Cer. If omitted, the default is Pfx. Possible values include:
            'Pfx', 'Cer'</param>
            <param name="password">The password to access the certificate's
            private key.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner.ThumbprintAlgorithm">
            <summary>
            Gets or sets the algorithm of the certificate thumbprint
            </summary>
            <remarks>
            This must match the first portion of the certificate name.
            Currently required to be 'SHA1'.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner.Thumbprint">
            <summary>
            Gets or sets the thumbprint of the certificate
            </summary>
            <remarks>
            This must match the thumbprint from the name.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner.Format">
            <summary>
            Gets or sets the format of the certificate - either Pfx or Cer. If
            omitted, the default is Pfx. Possible values include: 'Pfx', 'Cer'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner.Data">
            <summary>
            Gets or sets the base64-encoded contents of the certificate.
            </summary>
            <remarks>
            The maximum size is 10KB.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner.Password">
            <summary>
            Gets or sets the password to access the certificate's private key.
            </summary>
            <remarks>
            This is required if the certificate format is pfx and must be
            omitted if the certificate format is cer.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateCreateOrUpdateParametersInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the CertificateDeleteHeadersInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the CertificateDeleteHeadersInner
            class.
            </summary>
            <param name="location">The URL of the resource used to check the
            status of the asynchronous operation.</param>
            <param name="retryAfter">Suggested delay to check the status of the
            asynchronous operation. The value is an integer that represents the
            seconds.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner.Location">
            <summary>
            Gets or sets the URL of the resource used to check the status of
            the asynchronous operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateDeleteHeadersInner.RetryAfter">
            <summary>
            Gets or sets suggested delay to check the status of the
            asynchronous operation. The value is an integer that represents the
            seconds.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateFormat">
            <summary>
            Defines values for CertificateFormat.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateGetHeadersInner">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateGetHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the CertificateGetHeadersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateGetHeadersInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CertificateGetHeadersInner class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateGetHeadersInner.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner">
            <summary>
            Contains information about a certificate.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner.#ctor">
            <summary>
            Initializes a new instance of the CertificateInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateFormat,Microsoft.Azure.Management.Batch.Fluent.Models.CertificateProvisioningState,System.Nullable{System.DateTime},Microsoft.Azure.Management.Batch.Fluent.Models.CertificateProvisioningState,System.Nullable{System.DateTime},System.String,Microsoft.Azure.Management.Batch.Fluent.Models.DeleteCertificateError)">
            <summary>
            Initializes a new instance of the CertificateInner class.
            </summary>
            <param name="id">The ID of the resource.</param>
            <param name="name">The name of the resource.</param>
            <param name="type">The type of the resource.</param>
            <param name="etag">The ETag of the resource, used for concurrency
            statements.</param>
            <param name="thumbprintAlgorithm">The algorithm of the certificate
            thumbprint</param>
            <param name="thumbprint">The thumbprint of the certificate</param>
            <param name="format">The format of the certificate - either Pfx or
            Cer. If omitted, the default is Pfx. Possible values include:
            'Pfx', 'Cer'</param>
            <param name="provisioningState">The provisioned state of the
            resource</param>
            <param name="provisioningStateTransitionTime">The time at which the
            certificate entered its current state.</param>
            <param name="previousProvisioningState">The previous provisioned
            state of the resource. Possible values include: 'Succeeded',
            'Deleting', 'Failed'</param>
            <param name="previousProvisioningStateTransitionTime">The time at
            which the certificate entered its previous state.</param>
            <param name="publicData">The public key of the certificate.</param>
            <param name="deleteCertificateError">The error which occurred while
            deleting the certificate</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner.ThumbprintAlgorithm">
            <summary>
            Gets or sets the algorithm of the certificate thumbprint
            </summary>
            <remarks>
            This must match the first portion of the certificate name.
            Currently required to be 'SHA1'.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner.Thumbprint">
            <summary>
            Gets or sets the thumbprint of the certificate
            </summary>
            <remarks>
            This must match the thumbprint from the name.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner.Format">
            <summary>
            Gets or sets the format of the certificate - either Pfx or Cer. If
            omitted, the default is Pfx. Possible values include: 'Pfx', 'Cer'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner.ProvisioningState">
             <summary>
             Gets the provisioned state of the resource
             </summary>
             <remarks>
             Values are:
            
             Succeeded - The certificate is available for use in pools.
             Deleting - The user has requested that the certificate be deleted,
             but the delete operation has not yet completed. You may not
             reference the certificate when creating or updating pools.
             Failed - The user requested that the certificate be deleted, but
             there are pools that still have references to the certificate, or
             it is still installed on one or more compute nodes. (The latter can
             occur if the certificate has been removed from the pool, but the
             node has not yet restarted. Nodes refresh their certificates only
             when they restart.) You may use the cancel certificate delete
             operation to cancel the delete, or the delete certificate operation
             to retry the delete. Possible values include: 'Succeeded',
             'Deleting', 'Failed'
             </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner.ProvisioningStateTransitionTime">
            <summary>
            Gets the time at which the certificate entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner.PreviousProvisioningState">
            <summary>
            Gets the previous provisioned state of the resource. Possible
            values include: 'Succeeded', 'Deleting', 'Failed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner.PreviousProvisioningStateTransitionTime">
            <summary>
            Gets the time at which the certificate entered its previous state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner.PublicData">
            <summary>
            Gets the public key of the certificate.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner.DeleteCertificateError">
            <summary>
            Gets the error which occurred while deleting the certificate
            </summary>
            <remarks>
            This is only returned when the certificate provisioningState is
            'Failed'.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateProvisioningState">
            <summary>
            Defines values for CertificateProvisioningState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateReference">
            <summary>
            A reference to a certificate to be installed on compute nodes in a
            pool. This must exist inside the same account as the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateReference.#ctor">
            <summary>
            Initializes a new instance of the CertificateReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateReference.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.CertificateStoreLocation},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.CertificateVisibility})">
            <summary>
            Initializes a new instance of the CertificateReference class.
            </summary>
            <param name="id">The fully qualified ID of the certificate to
            install on the pool. This must be inside the same batch account as
            the pool.</param>
            <param name="storeLocation">The location of the certificate store
            on the compute node into which to install the certificate.</param>
            <param name="storeName">The name of the certificate store on the
            compute node into which to install the certificate.</param>
            <param name="visibility">Which user accounts on the compute node
            should have access to the private data of the certificate.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateReference.Id">
            <summary>
            Gets or sets the fully qualified ID of the certificate to install
            on the pool. This must be inside the same batch account as the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateReference.StoreLocation">
            <summary>
            Gets or sets the location of the certificate store on the compute
            node into which to install the certificate.
            </summary>
            <remarks>
            The default value is currentUser. This property is applicable only
            for pools configured with Windows nodes (that is, created with
            cloudServiceConfiguration, or with virtualMachineConfiguration
            using a Windows image reference). For Linux compute nodes, the
            certificates are stored in a directory inside the task working
            directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
            supplied to the task to query for this location. For certificates
            with visibility of 'remoteUser', a 'certs' directory is created in
            the user's home directory (e.g., /home/{user-name}/certs) and
            certificates are placed in that directory. Possible values include:
            'CurrentUser', 'LocalMachine'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateReference.StoreName">
            <summary>
            Gets or sets the name of the certificate store on the compute node
            into which to install the certificate.
            </summary>
            <remarks>
            This property is applicable only for pools configured with Windows
            nodes (that is, created with cloudServiceConfiguration, or with
            virtualMachineConfiguration using a Windows image reference).
            Common store names include: My, Root, CA, Trust, Disallowed,
            TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any
            custom store name can also be used. The default value is My.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateReference.Visibility">
             <summary>
             Gets or sets which user accounts on the compute node should have
             access to the private data of the certificate.
             </summary>
             <remarks>
             Values are:
            
             starttask - The user account under which the start task is run.
             task - The accounts under which job tasks are run.
             remoteuser - The accounts under which users remotely access the
             node.
            
             You can specify more than one visibility in this collection. The
             default is all accounts.
             </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateReference.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateStoreLocation">
            <summary>
            Defines values for CertificateStoreLocation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateUpdateHeadersInner">
            <summary>
            Defines headers for Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateUpdateHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the CertificateUpdateHeadersInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateUpdateHeadersInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CertificateUpdateHeadersInner
            class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateUpdateHeadersInner.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CertificateVisibility">
            <summary>
            Defines values for CertificateVisibility.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityParameters">
            <summary>
            Parameters for a check name availability request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityParameters.#ctor">
            <summary>
            Initializes a new instance of the CheckNameAvailabilityParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CheckNameAvailabilityParameters
            class.
            </summary>
            <param name="name">The name to check for availability</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityParameters.#cctor">
            <summary>
            Static constructor for CheckNameAvailabilityParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityParameters.Name">
            <summary>
            Gets or sets the name to check for availability
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityParameters.Type">
            <summary>
            The resource type. Must be set to Microsoft.Batch/batchAccounts
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityResultInner">
            <summary>
            The CheckNameAvailability operation response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityResultInner.#ctor">
            <summary>
            Initializes a new instance of the CheckNameAvailabilityResultInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityResultInner.#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.NameAvailabilityReason},System.String)">
            <summary>
            Initializes a new instance of the CheckNameAvailabilityResultInner
            class.
            </summary>
            <param name="nameAvailable">Gets a boolean value that indicates
            whether the name is available for you to use. If true, the name is
            available. If false, the name has already been taken or invalid and
            cannot be used.</param>
            <param name="reason">Gets the reason that a Batch account name
            could not be used. The Reason element is only returned if
            NameAvailable is false. Possible values include: 'Invalid',
            'AlreadyExists'</param>
            <param name="message">Gets an error message explaining the Reason
            value in more detail.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityResultInner.NameAvailable">
            <summary>
            Gets a boolean value that indicates whether the name is available
            for you to use. If true, the name is available. If false, the name
            has already been taken or invalid and cannot be used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityResultInner.Reason">
            <summary>
            Gets the reason that a Batch account name could not be used. The
            Reason element is only returned if NameAvailable is false. Possible
            values include: 'Invalid', 'AlreadyExists'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CheckNameAvailabilityResultInner.Message">
            <summary>
            Gets an error message explaining the Reason value in more detail.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.CloudServiceConfiguration">
            <summary>
            The configuration for nodes in a pool based on the Azure Cloud Services
            platform.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CloudServiceConfiguration.#ctor">
            <summary>
            Initializes a new instance of the CloudServiceConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CloudServiceConfiguration.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the CloudServiceConfiguration class.
            </summary>
            <param name="osFamily">The Azure Guest OS family to be installed on
            the virtual machines in the pool.</param>
            <param name="targetOSVersion">The Azure Guest OS version to be
            installed on the virtual machines in the pool.</param>
            <param name="currentOSVersion">The Azure Guest OS Version currently
            installed on the virtual machines in the pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CloudServiceConfiguration.OsFamily">
            <summary>
            Gets or sets the Azure Guest OS family to be installed on the
            virtual machines in the pool.
            </summary>
            <remarks>
            Possible values are: 2 - OS Family 2, equivalent to Windows Server
            2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4
            - OS Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family
            5, equivalent to Windows Server 2016. For more information, see
            Azure Guest OS Releases
            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CloudServiceConfiguration.TargetOSVersion">
            <summary>
            Gets or sets the Azure Guest OS version to be installed on the
            virtual machines in the pool.
            </summary>
            <remarks>
            The default value is * which specifies the latest operating system
            version for the specified OS family.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.CloudServiceConfiguration.CurrentOSVersion">
            <summary>
            Gets or sets the Azure Guest OS Version currently installed on the
            virtual machines in the pool.
            </summary>
            <remarks>
            This may differ from targetOSVersion if the pool state is
            Upgrading. In this case some virtual machines may be on the
            targetOSVersion and some may be on the currentOSVersion during the
            upgrade process. Once all virtual machines have upgraded,
            currentOSVersion is updated to be the same as targetOSVersion.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.CloudServiceConfiguration.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ComputeNodeDeallocationOption">
            <summary>
            Defines values for ComputeNodeDeallocationOption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ComputeNodeFillType">
            <summary>
            Defines values for ComputeNodeFillType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.DataDisk">
            <summary>
            Data Disk settings which will be used by the data disks associated to
            Compute Nodes in the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.DataDisk.#ctor">
            <summary>
            Initializes a new instance of the DataDisk class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.DataDisk.#ctor(System.Int32,System.Int32,System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.CachingType},System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.StorageAccountType})">
            <summary>
            Initializes a new instance of the DataDisk class.
            </summary>
            <param name="lun">The logical unit number.</param>
            <param name="diskSizeGB">The initial disk size in GB when creating
            new data disk.</param>
            <param name="caching">The type of caching to be enabled for the
            data disks.</param>
            <param name="storageAccountType">The storage account type to be
            used for the data disk.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.DataDisk.Lun">
            <summary>
            Gets or sets the logical unit number.
            </summary>
            <remarks>
            The lun is used to uniquely identify each data disk. If attaching
            multiple disks, each should have a distinct lun.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.DataDisk.Caching">
             <summary>
             Gets or sets the type of caching to be enabled for the data disks.
             </summary>
             <remarks>
             Values are:
            
             none - The caching mode for the disk is not enabled.
             readOnly - The caching mode for the disk is read only.
             readWrite - The caching mode for the disk is read and write.
            
             The default value for caching is none. For information about the
             caching options see:
             https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
             Possible values include: 'None', 'ReadOnly', 'ReadWrite'
             </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.DataDisk.DiskSizeGB">
            <summary>
            Gets or sets the initial disk size in GB when creating new data
            disk.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.DataDisk.StorageAccountType">
             <summary>
             Gets or sets the storage account type to be used for the data disk.
             </summary>
             <remarks>
             If omitted, the default is "Standard_LRS". Values are:
            
             Standard_LRS - The data disk should use standard locally redundant
             storage.
             Premium_LRS - The data disk should use premium locally redundant
             storage. Possible values include: 'Standard_LRS', 'Premium_LRS'
             </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.DataDisk.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.DeleteCertificateError">
            <summary>
            An error response from the Batch service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.DeleteCertificateError.#ctor">
            <summary>
            Initializes a new instance of the DeleteCertificateError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.DeleteCertificateError.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.DeleteCertificateError})">
            <summary>
            Initializes a new instance of the DeleteCertificateError class.
            </summary>
            <param name="code">An identifier for the error. Codes are invariant
            and are intended to be consumed programmatically.</param>
            <param name="message">A message describing the error, intended to
            be suitable for display in a user interface.</param>
            <param name="target">The target of the particular error. For
            example, the name of the property in error.</param>
            <param name="details">A list of additional details about the
            error.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.DeleteCertificateError.Code">
            <summary>
            Gets or sets an identifier for the error. Codes are invariant and
            are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.DeleteCertificateError.Message">
            <summary>
            Gets or sets a message describing the error, intended to be
            suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.DeleteCertificateError.Target">
            <summary>
            Gets or sets the target of the particular error. For example, the
            name of the property in error.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.DeleteCertificateError.Details">
            <summary>
            Gets or sets a list of additional details about the error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.DeleteCertificateError.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.DeploymentConfiguration">
            <summary>
            Deployment configuration properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.DeploymentConfiguration.#ctor">
            <summary>
            Initializes a new instance of the DeploymentConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.DeploymentConfiguration.#ctor(Microsoft.Azure.Management.Batch.Fluent.Models.CloudServiceConfiguration,Microsoft.Azure.Management.Batch.Fluent.Models.VirtualMachineConfiguration)">
            <summary>
            Initializes a new instance of the DeploymentConfiguration class.
            </summary>
            <param name="cloudServiceConfiguration">The cloud service
            configuration for the pool.</param>
            <param name="virtualMachineConfiguration">The virtual machine
            configuration for the pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.DeploymentConfiguration.CloudServiceConfiguration">
            <summary>
            Gets or sets the cloud service configuration for the pool.
            </summary>
            <remarks>
            This property and virtualMachineConfiguration are mutually
            exclusive and one of the properties must be specified. This
            property cannot be specified if the Batch account was created with
            its poolAllocationMode property set to 'UserSubscription'.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.DeploymentConfiguration.VirtualMachineConfiguration">
            <summary>
            Gets or sets the virtual machine configuration for the pool.
            </summary>
            <remarks>
            This property and cloudServiceConfiguration are mutually exclusive
            and one of the properties must be specified.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.DeploymentConfiguration.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ElevationLevel">
            <summary>
            Defines values for ElevationLevel.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.EnvironmentSetting">
            <summary>
            An environment variable to be set on a task process.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.EnvironmentSetting.#ctor">
            <summary>
            Initializes a new instance of the EnvironmentSetting class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.EnvironmentSetting.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the EnvironmentSetting class.
            </summary>
            <param name="name">The name of the environment variable.</param>
            <param name="value">The value of the environment variable.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.EnvironmentSetting.Name">
            <summary>
            Gets or sets the name of the environment variable.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.EnvironmentSetting.Value">
            <summary>
            Gets or sets the value of the environment variable.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.EnvironmentSetting.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.FixedScaleSettings">
            <summary>
            Fixed scale settings for the pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.FixedScaleSettings.#ctor">
            <summary>
            Initializes a new instance of the FixedScaleSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.FixedScaleSettings.#ctor(System.Nullable{System.TimeSpan},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.ComputeNodeDeallocationOption})">
            <summary>
            Initializes a new instance of the FixedScaleSettings class.
            </summary>
            <param name="resizeTimeout">The timeout for allocation of compute
            nodes to the pool.</param>
            <param name="targetDedicatedNodes">The desired number of dedicated
            compute nodes in the pool.</param>
            <param name="targetLowPriorityNodes">The desired number of
            low-priority compute nodes in the pool.</param>
            <param name="nodeDeallocationOption">Determines what to do with a
            node and its running task(s) if the pool size is
            decreasing.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.FixedScaleSettings.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the
            pool.
            </summary>
            <remarks>
            The default value is 15 minutes. Timeout values use ISO 8601
            format. For example, use PT10M for 10 minutes. The minimum value is
            5 minutes. If you specify a value less than 5 minutes, the Batch
            service rejects the request with an error; if you are calling the
            REST API directly, the HTTP status code is 400 (Bad Request).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.FixedScaleSettings.TargetDedicatedNodes">
            <summary>
            Gets or sets the desired number of dedicated compute nodes in the
            pool.
            </summary>
            <remarks>
            At least one of targetDedicatedNodes, targetLowPriority nodes must
            be set.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.FixedScaleSettings.TargetLowPriorityNodes">
            <summary>
            Gets or sets the desired number of low-priority compute nodes in
            the pool.
            </summary>
            <remarks>
            At least one of targetDedicatedNodes, targetLowPriority nodes must
            be set.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.FixedScaleSettings.NodeDeallocationOption">
            <summary>
            Gets or sets determines what to do with a node and its running
            task(s) if the pool size is decreasing.
            </summary>
            <remarks>
            If omitted, the default value is Requeue. Possible values include:
            'Requeue', 'Terminate', 'TaskCompletion', 'RetainedData'
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ImageReference">
            <summary>
            A reference to an Azure Virtual Machines Marketplace image or the Azure
            Image resource of a custom Virtual Machine. To get the list of all
            imageReferences verified by Azure Batch, see the 'List supported node
            agent SKUs' operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ImageReference.#ctor">
            <summary>
            Initializes a new instance of the ImageReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ImageReference.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ImageReference class.
            </summary>
            <param name="publisher">The publisher of the Azure Virtual Machines
            Marketplace image.</param>
            <param name="offer">The offer type of the Azure Virtual Machines
            Marketplace image.</param>
            <param name="sku">The SKU of the Azure Virtual Machines Marketplace
            image.</param>
            <param name="version">The version of the Azure Virtual Machines
            Marketplace image.</param>
            <param name="id">The ARM resource identifier of the virtual machine
            image. Computes nodes of the pool will be created using this custom
            image. This is of the form
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ImageReference.Publisher">
            <summary>
            Gets or sets the publisher of the Azure Virtual Machines
            Marketplace image.
            </summary>
            <remarks>
            For example, Canonical or MicrosoftWindowsServer.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ImageReference.Offer">
            <summary>
            Gets or sets the offer type of the Azure Virtual Machines
            Marketplace image.
            </summary>
            <remarks>
            For example, UbuntuServer or WindowsServer.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ImageReference.Sku">
            <summary>
            Gets or sets the SKU of the Azure Virtual Machines Marketplace
            image.
            </summary>
            <remarks>
            For example, 14.04.0-LTS or 2012-R2-Datacenter.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ImageReference.Version">
            <summary>
            Gets or sets the version of the Azure Virtual Machines Marketplace
            image.
            </summary>
            <remarks>
            A value of 'latest' can be specified to select the latest version
            of an image. If omitted, the default is 'latest'.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ImageReference.Id">
            <summary>
            Gets or sets the ARM resource identifier of the virtual machine
            image. Computes nodes of the pool will be created using this custom
            image. This is of the form
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}
            </summary>
            <remarks>
            This property is mutually exclusive with other properties. The
            virtual machine image must be in the same region and subscription
            as the Azure Batch account. For information about the firewall
            settings for Batch node agent to communicate with Batch service see
            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
            .
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.InboundEndpointProtocol">
            <summary>
            Defines values for InboundEndpointProtocol.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.InboundNatPool">
            <summary>
            A inbound NAT pool that can be used to address specific ports on
            compute nodes in a Batch pool externally.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.InboundNatPool.#ctor">
            <summary>
            Initializes a new instance of the InboundNatPool class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.InboundNatPool.#ctor(System.String,Microsoft.Azure.Management.Batch.Fluent.Models.InboundEndpointProtocol,System.Int32,System.Int32,System.Int32,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.NetworkSecurityGroupRule})">
            <summary>
            Initializes a new instance of the InboundNatPool class.
            </summary>
            <param name="name">The name of the endpoint.</param>
            <param name="protocol">The protocol of the endpoint.</param>
            <param name="backendPort">The port number on the compute
            node.</param>
            <param name="frontendPortRangeStart">The first port number in the
            range of external ports that will be used to provide inbound access
            to the backendPort on individual compute nodes.</param>
            <param name="frontendPortRangeEnd">The last port number in the
            range of external ports that will be used to provide inbound access
            to the backendPort on individual compute nodes.</param>
            <param name="networkSecurityGroupRules">A list of network security
            group rules that will be applied to the endpoint.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.InboundNatPool.Name">
            <summary>
            Gets or sets the name of the endpoint.
            </summary>
            <remarks>
            The name must be unique within a Batch pool, can contain letters,
            numbers, underscores, periods, and hyphens. Names must start with a
            letter or number, must end with a letter, number, or underscore,
            and cannot exceed 77 characters.  If any invalid values are
            provided the request fails with HTTP status code 400.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.InboundNatPool.Protocol">
            <summary>
            Gets or sets the protocol of the endpoint.
            </summary>
            <remarks>
            Possible values include: 'TCP', 'UDP'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.InboundNatPool.BackendPort">
            <summary>
            Gets or sets the port number on the compute node.
            </summary>
            <remarks>
            This must be unique within a Batch pool. Acceptable values are
            between 1 and 65535 except for 22, 3389, 29876 and 29877 as these
            are reserved. If any reserved values are provided the request fails
            with HTTP status code 400.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.InboundNatPool.FrontendPortRangeStart">
            <summary>
            Gets or sets the first port number in the range of external ports
            that will be used to provide inbound access to the backendPort on
            individual compute nodes.
            </summary>
            <remarks>
            Acceptable values range between 1 and 65534 except ports from 50000
            to 55000 which are reserved. All ranges within a pool must be
            distinct and cannot overlap. If any reserved or overlapping values
            are provided the request fails with HTTP status code 400.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.InboundNatPool.FrontendPortRangeEnd">
            <summary>
            Gets or sets the last port number in the range of external ports
            that will be used to provide inbound access to the backendPort on
            individual compute nodes.
            </summary>
            <remarks>
            Acceptable values range between 1 and 65534 except ports from 50000
            to 55000 which are reserved by the Batch service. All ranges within
            a pool must be distinct and cannot overlap. If any reserved or
            overlapping values are provided the request fails with HTTP status
            code 400.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.InboundNatPool.NetworkSecurityGroupRules">
            <summary>
            Gets or sets a list of network security group rules that will be
            applied to the endpoint.
            </summary>
            <remarks>
            The maximum number of rules that can be specified across all the
            endpoints on a Batch pool is 25. If no network security group rules
            are specified, a default rule will be created to allow inbound
            access to the specified backendPort. If the maximum number of
            network security group rules is exceeded the request fails with
            HTTP status code 400.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.InboundNatPool.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.InterNodeCommunicationState">
            <summary>
            Defines values for InterNodeCommunicationState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.KeyVaultReference">
            <summary>
            Identifies the Azure key vault associated with a Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.KeyVaultReference.#ctor">
            <summary>
            Initializes a new instance of the KeyVaultReference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.KeyVaultReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the KeyVaultReference class.
            </summary>
            <param name="id">The resource ID of the Azure key vault associated
            with the Batch account.</param>
            <param name="url">The URL of the Azure key vault associated with
            the Batch account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.KeyVaultReference.Id">
            <summary>
            Gets or sets the resource ID of the Azure key vault associated with
            the Batch account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.KeyVaultReference.Url">
            <summary>
            Gets or sets the URL of the Azure key vault associated with the
            Batch account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.KeyVaultReference.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.LinuxUserConfiguration">
            <summary>
            Properties used to create a user account on a Linux node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.LinuxUserConfiguration.#ctor">
            <summary>
            Initializes a new instance of the LinuxUserConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.LinuxUserConfiguration.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the LinuxUserConfiguration class.
            </summary>
            <param name="uid">The user ID of the user account.</param>
            <param name="gid">The group ID for the user account.</param>
            <param name="sshPrivateKey">The SSH private key for the user
            account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.LinuxUserConfiguration.Uid">
            <summary>
            Gets or sets the user ID of the user account.
            </summary>
            <remarks>
            The uid and gid properties must be specified together or not at
            all. If not specified the underlying operating system picks the
            uid.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.LinuxUserConfiguration.Gid">
            <summary>
            Gets or sets the group ID for the user account.
            </summary>
            <remarks>
            The uid and gid properties must be specified together or not at
            all. If not specified the underlying operating system picks the
            gid.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.LinuxUserConfiguration.SshPrivateKey">
            <summary>
            Gets or sets the SSH private key for the user account.
            </summary>
            <remarks>
            The private key must not be password protected. The private key is
            used to automatically configure asymmetric-key based authentication
            for SSH between nodes in a Linux pool when the pool's
            enableInterNodeCommunication property is true (it is ignored if
            enableInterNodeCommunication is false). It does this by placing the
            key pair into the user's .ssh directory. If not specified,
            password-less SSH is not configured between nodes (no modification
            of the user's .ssh directory is done).
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.MetadataItem">
            <summary>
            A name-value pair associated with a Batch service resource.
            </summary>
            <remarks>
            The Batch service does not assign any meaning to this metadata; it is
            solely for the use of user code.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.MetadataItem.#ctor">
            <summary>
            Initializes a new instance of the MetadataItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.MetadataItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the MetadataItem class.
            </summary>
            <param name="name">The name of the metadata item.</param>
            <param name="value">The value of the metadata item.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.MetadataItem.Name">
            <summary>
            Gets or sets the name of the metadata item.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.MetadataItem.Value">
            <summary>
            Gets or sets the value of the metadata item.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.MetadataItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.NameAvailabilityReason">
            <summary>
            Defines values for NameAvailabilityReason.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkConfiguration">
            <summary>
            The network configuration for a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkConfiguration.#ctor">
            <summary>
            Initializes a new instance of the NetworkConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkConfiguration.#ctor(System.String,Microsoft.Azure.Management.Batch.Fluent.Models.PoolEndpointConfiguration)">
            <summary>
            Initializes a new instance of the NetworkConfiguration class.
            </summary>
            <param name="subnetId">The ARM resource identifier of the virtual
            network subnet which the compute nodes of the pool will join. This
            is of the form
            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.</param>
            <param name="endpointConfiguration">The configuration for endpoints
            on compute nodes in the Batch pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkConfiguration.SubnetId">
            <summary>
            Gets or sets the ARM resource identifier of the virtual network
            subnet which the compute nodes of the pool will join. This is of
            the form
            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.
            </summary>
            <remarks>
            The virtual network must be in the same region and subscription as
            the Azure Batch account. The specified subnet should have enough
            free IP addresses to accommodate the number of nodes in the pool.
            If the subnet doesn't have enough free IP addresses, the pool will
            partially allocate compute nodes, and a resize error will occur.
            The 'MicrosoftAzureBatch' service principal must have the 'Classic
            Virtual Machine Contributor' Role-Based Access Control (RBAC) role
            for the specified VNet. The specified subnet must allow
            communication from the Azure Batch service to be able to schedule
            tasks on the compute nodes. This can be verified by checking if the
            specified VNet has any associated Network Security Groups (NSG). If
            communication to the compute nodes in the specified subnet is
            denied by an NSG, then the Batch service will set the state of the
            compute nodes to unusable. For pools created via
            virtualMachineConfiguration the Batch account must have
            poolAllocationMode userSubscription in order to use a VNet. If the
            specified VNet has any associated Network Security Groups (NSG),
            then a few reserved system ports must be enabled for inbound
            communication. For pools created with a virtual machine
            configuration, enable ports 29876 and 29877, as well as port 22 for
            Linux and port 3389 for Windows. For pools created with a cloud
            service configuration, enable ports 10100, 20100, and 30100. Also
            enable outbound connections to Azure Storage on port 443. For more
            details see:
            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkConfiguration.EndpointConfiguration">
            <summary>
            Gets or sets the configuration for endpoints on compute nodes in
            the Batch pool.
            </summary>
            <remarks>
            Pool endpoint configuration is only supported on pools with the
            virtualMachineConfiguration property.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkConfiguration.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkSecurityGroupRule">
            <summary>
            A network security group rule to apply to an inbound endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkSecurityGroupRule.#ctor">
            <summary>
            Initializes a new instance of the NetworkSecurityGroupRule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkSecurityGroupRule.#ctor(System.Int32,Microsoft.Azure.Management.Batch.Fluent.Models.NetworkSecurityGroupRuleAccess,System.String)">
            <summary>
            Initializes a new instance of the NetworkSecurityGroupRule class.
            </summary>
            <param name="priority">The priority for this rule.</param>
            <param name="access">The action that should be taken for a
            specified IP address, subnet range or tag.</param>
            <param name="sourceAddressPrefix">The source address prefix or tag
            to match for the rule.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkSecurityGroupRule.Priority">
            <summary>
            Gets or sets the priority for this rule.
            </summary>
            <remarks>
            Priorities within a pool must be unique and are evaluated in order
            of priority. The lower the number the higher the priority. For
            example, rules could be specified with order numbers of 150, 250,
            and 350. The rule with the order number of 150 takes precedence
            over the rule that has an order of 250. Allowed priorities are 150
            to 3500. If any reserved or duplicate values are provided the
            request fails with HTTP status code 400.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkSecurityGroupRule.Access">
            <summary>
            Gets or sets the action that should be taken for a specified IP
            address, subnet range or tag.
            </summary>
            <remarks>
            Possible values include: 'Allow', 'Deny'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkSecurityGroupRule.SourceAddressPrefix">
            <summary>
            Gets or sets the source address prefix or tag to match for the
            rule.
            </summary>
            <remarks>
            Valid values are a single IP address (i.e. 10.10.10.10), IP subnet
            (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If
            any other values are provided the request fails with HTTP status
            code 400.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkSecurityGroupRule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.NetworkSecurityGroupRuleAccess">
            <summary>
            Defines values for NetworkSecurityGroupRuleAccess.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.Operation">
            <summary>
            A REST API operation
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.Operation.#ctor">
            <summary>
            Initializes a new instance of the Operation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.Operation.#ctor(System.String,Microsoft.Azure.Management.Batch.Fluent.Models.OperationDisplay,System.String,System.Object)">
            <summary>
            Initializes a new instance of the Operation class.
            </summary>
            <param name="name">The operation name.</param>
            <param name="display">The object that describes the
            operation.</param>
            <param name="origin">The intended executor of the
            operation.</param>
            <param name="properties">Properties of the operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.Operation.Name">
            <summary>
            Gets or sets the operation name.
            </summary>
            <remarks>
            This is of the format {provider}/{resource}/{operation}
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.Operation.Display">
            <summary>
            Gets or sets the object that describes the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.Operation.Origin">
            <summary>
            Gets or sets the intended executor of the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.Operation.Properties">
            <summary>
            Gets or sets properties of the operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.OperationDisplay">
            <summary>
            The object that describes the operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.OperationDisplay.#ctor">
            <summary>
            Initializes a new instance of the OperationDisplay class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.OperationDisplay.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the OperationDisplay class.
            </summary>
            <param name="provider">Friendly name of the resource
            provider.</param>
            <param name="operation">The operation type.</param>
            <param name="resource">The resource type on which the operation is
            performed.</param>
            <param name="description">The friendly name of the
            operation</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.OperationDisplay.Provider">
            <summary>
            Gets or sets friendly name of the resource provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.OperationDisplay.Operation">
            <summary>
            Gets or sets the operation type.
            </summary>
            <remarks>
            For example: read, write, delete, or listKeys/action
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.OperationDisplay.Resource">
            <summary>
            Gets or sets the resource type on which the operation is performed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.OperationDisplay.Description">
            <summary>
            Gets or sets the friendly name of the operation
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.OSDisk">
            <summary>
            Settings for the operating system disk of the virtual machine.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.OSDisk.#ctor">
            <summary>
            Initializes a new instance of the OSDisk class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.OSDisk.#ctor(System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.CachingType})">
            <summary>
            Initializes a new instance of the OSDisk class.
            </summary>
            <param name="caching">The type of caching to be enabled for the
            data disks. none - The caching mode for the disk is not enabled.
            readOnly - The caching mode for the disk is read only. readWrite -
            The caching mode for the disk is read and write.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.OSDisk.Caching">
            <summary>
            Gets or sets the type of caching to be enabled for the data disks.
            none - The caching mode for the disk is not enabled. readOnly - The
            caching mode for the disk is read only. readWrite - The caching
            mode for the disk is read and write.
            </summary>
            <remarks>
            Default value is none. Possible values include: 'None', 'ReadOnly',
            'ReadWrite'
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.PackageState">
            <summary>
            Defines values for PackageState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.Page`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.Page`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.Page`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.Page`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.PoolAllocationMode">
            <summary>
            Defines values for PoolAllocationMode.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.PoolCreateHeadersInner">
            <summary>
            Defines headers for Create operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolCreateHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the PoolCreateHeadersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolCreateHeadersInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PoolCreateHeadersInner class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolCreateHeadersInner.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.PoolDeleteHeadersInner">
            <summary>
            Defines headers for Delete operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolDeleteHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the PoolDeleteHeadersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolDeleteHeadersInner.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the PoolDeleteHeadersInner class.
            </summary>
            <param name="location">The URL of the resource used to check the
            status of the asynchronous operation.</param>
            <param name="retryAfter">Suggested delay to check the status of the
            asynchronous operation. The value is an integer that represents the
            seconds.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolDeleteHeadersInner.Location">
            <summary>
            Gets or sets the URL of the resource used to check the status of
            the asynchronous operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolDeleteHeadersInner.RetryAfter">
            <summary>
            Gets or sets suggested delay to check the status of the
            asynchronous operation. The value is an integer that represents the
            seconds.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.PoolDisableAutoScaleHeadersInner">
            <summary>
            Defines headers for DisableAutoScale operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolDisableAutoScaleHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the PoolDisableAutoScaleHeadersInner
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolDisableAutoScaleHeadersInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PoolDisableAutoScaleHeadersInner
            class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolDisableAutoScaleHeadersInner.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.PoolEndpointConfiguration">
            <summary>
            The endpoint configuration for a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolEndpointConfiguration.#ctor">
            <summary>
            Initializes a new instance of the PoolEndpointConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolEndpointConfiguration.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.InboundNatPool})">
            <summary>
            Initializes a new instance of the PoolEndpointConfiguration class.
            </summary>
            <param name="inboundNatPools">A list of inbound NAT pools that can
            be used to address specific ports on an individual compute node
            externally.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolEndpointConfiguration.InboundNatPools">
            <summary>
            Gets or sets a list of inbound NAT pools that can be used to
            address specific ports on an individual compute node externally.
            </summary>
            <remarks>
            The maximum number of inbound NAT pools per Batch pool is 5. If the
            maximum number of inbound NAT pools is exceeded the request fails
            with HTTP status code 400.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolEndpointConfiguration.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.PoolGetHeadersInner">
            <summary>
            Defines headers for Get operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolGetHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the PoolGetHeadersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolGetHeadersInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PoolGetHeadersInner class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolGetHeadersInner.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner">
            <summary>
            Contains information about a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.#ctor">
            <summary>
            Initializes a new instance of the PoolInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.PoolProvisioningState},System.Nullable{System.DateTime},System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.AllocationState},System.Nullable{System.DateTime},System.String,Microsoft.Azure.Management.Batch.Fluent.Models.DeploymentConfiguration,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Management.Batch.Fluent.Models.ScaleSettings,Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleRun,System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.InterNodeCommunicationState},Microsoft.Azure.Management.Batch.Fluent.Models.NetworkConfiguration,System.Nullable{System.Int32},Microsoft.Azure.Management.Batch.Fluent.Models.TaskSchedulingPolicy,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.UserAccount},System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.MetadataItem},Microsoft.Azure.Management.Batch.Fluent.Models.StartTask,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.CertificateReference},System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.ApplicationPackageReference},System.Collections.Generic.IList{System.String},Microsoft.Azure.Management.Batch.Fluent.Models.ResizeOperationStatus)">
            <summary>
            Initializes a new instance of the PoolInner class.
            </summary>
            <param name="id">The ID of the resource.</param>
            <param name="name">The name of the resource.</param>
            <param name="type">The type of the resource.</param>
            <param name="etag">The ETag of the resource, used for concurrency
            statements.</param>
            <param name="displayName">The display name for the pool.</param>
            <param name="lastModified">The last modified time of the
            pool.</param>
            <param name="creationTime">The creation time of the pool.</param>
            <param name="provisioningState">The current state of the
            pool.</param>
            <param name="provisioningStateTransitionTime">The time at which the
            pool entered its current state.</param>
            <param name="allocationState">Whether the pool is resizing.</param>
            <param name="allocationStateTransitionTime">The time at which the
            pool entered its current allocation state.</param>
            <param name="vmSize">The size of virtual machines in the pool. All
            VMs in a pool are the same size.</param>
            <param name="deploymentConfiguration">This property describes how
            the pool nodes will be deployed - using Cloud Services or Virtual
            Machines.</param>
            <param name="currentDedicatedNodes">The number of compute nodes
            currently in the pool.</param>
            <param name="currentLowPriorityNodes">The number of low priority
            compute nodes currently in the pool.</param>
            <param name="scaleSettings">Settings which configure the number of
            nodes in the pool.</param>
            <param name="autoScaleRun">The results and errors from the last
            execution of the autoscale formula.</param>
            <param name="interNodeCommunication">Whether the pool permits
            direct communication between nodes.</param>
            <param name="networkConfiguration">The network configuration for
            the pool.</param>
            <param name="maxTasksPerNode">The maximum number of tasks that can
            run concurrently on a single compute node in the pool.</param>
            <param name="taskSchedulingPolicy">How tasks are distributed across
            compute nodes in a pool.</param>
            <param name="userAccounts">The list of user accounts to be created
            on each node in the pool.</param>
            <param name="metadata">A list of name-value pairs associated with
            the pool as metadata.</param>
            <param name="startTask">A task specified to run on each compute
            node as it joins the pool.</param>
            <param name="certificates">The list of certificates to be installed
            on each compute node in the pool.</param>
            <param name="applicationPackages">The list of application packages
            to be installed on each compute node in the pool.</param>
            <param name="applicationLicenses">The list of application licenses
            the Batch service will make available on each compute node in the
            pool.</param>
            <param name="resizeOperationStatus">Contains details about the
            current or last completed resize operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.DisplayName">
            <summary>
            Gets or sets the display name for the pool.
            </summary>
            <remarks>
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.LastModified">
            <summary>
            Gets the last modified time of the pool.
            </summary>
            <remarks>
            This is the last time at which the pool level data, such as the
            targetDedicatedNodes or autoScaleSettings, changed. It does not
            factor in node-level changes such as a compute node changing state.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.CreationTime">
            <summary>
            Gets the creation time of the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.ProvisioningState">
             <summary>
             Gets the current state of the pool.
             </summary>
             <remarks>
             Values are:
            
             Succeeded - The pool is available to run tasks subject to the
             availability of compute nodes.
             Deleting - The user has requested that the pool be deleted, but the
             delete operation has not yet completed. Possible values include:
             'Succeeded', 'Deleting'
             </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.ProvisioningStateTransitionTime">
            <summary>
            Gets the time at which the pool entered its current state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.AllocationState">
             <summary>
             Gets whether the pool is resizing.
             </summary>
             <remarks>
             Values are:
            
             Steady - The pool is not resizing. There are no changes to the
             number of nodes in the pool in progress. A pool enters this state
             when it is created and when no operations are being performed on
             the pool to change the number of dedicated nodes.
             Resizing - The pool is resizing; that is, compute nodes are being
             added to or removed from the pool.
             Stopping - The pool was resizing, but the user has requested that
             the resize be stopped, but the stop request has not yet been
             completed. Possible values include: 'Steady', 'Resizing',
             'Stopping'
             </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.AllocationStateTransitionTime">
            <summary>
            Gets the time at which the pool entered its current allocation
            state.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.VmSize">
            <summary>
            Gets or sets the size of virtual machines in the pool. All VMs in a
            pool are the same size.
            </summary>
            <remarks>
            For information about available sizes of virtual machines for Cloud
            Services pools (pools created with cloudServiceConfiguration), see
            Sizes for Cloud Services
            (http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).
            Batch supports all Cloud Services VM sizes except ExtraSmall. For
            information about available VM sizes for pools using images from
            the Virtual Machines Marketplace (pools created with
            virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)
            or Sizes for Virtual Machines (Windows)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).
            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2
            series).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.DeploymentConfiguration">
            <summary>
            Gets or sets this property describes how the pool nodes will be
            deployed - using Cloud Services or Virtual Machines.
            </summary>
            <remarks>
            Using CloudServiceConfiguration specifies that the nodes should be
            creating using Azure Cloud Services (PaaS), while
            VirtualMachineConfiguration uses Azure Virtual Machines (IaaS).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.CurrentDedicatedNodes">
            <summary>
            Gets the number of compute nodes currently in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.CurrentLowPriorityNodes">
            <summary>
            Gets the number of low priority compute nodes currently in the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.ScaleSettings">
            <summary>
            Gets or sets settings which configure the number of nodes in the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.AutoScaleRun">
            <summary>
            Gets the results and errors from the last execution of the
            autoscale formula.
            </summary>
            <remarks>
            This property is set only if the pool automatically scales, i.e.
            autoScaleSettings are used.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.InterNodeCommunication">
            <summary>
            Gets or sets whether the pool permits direct communication between
            nodes.
            </summary>
            <remarks>
            This imposes restrictions on which nodes can be assigned to the
            pool. Enabling this value can reduce the chance of the requested
            number of nodes to be allocated in the pool. If not specified, this
            value defaults to 'Disabled'. Possible values include: 'Enabled',
            'Disabled'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.NetworkConfiguration">
            <summary>
            Gets or sets the network configuration for the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.MaxTasksPerNode">
            <summary>
            Gets or sets the maximum number of tasks that can run concurrently
            on a single compute node in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.TaskSchedulingPolicy">
            <summary>
            Gets or sets how tasks are distributed across compute nodes in a
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.UserAccounts">
            <summary>
            Gets or sets the list of user accounts to be created on each node
            in the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.Metadata">
            <summary>
            Gets or sets a list of name-value pairs associated with the pool as
            metadata.
            </summary>
            <remarks>
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.StartTask">
            <summary>
            Gets or sets a task specified to run on each compute node as it
            joins the pool.
            </summary>
            <remarks>
            In an PATCH (update) operation, this property can be set to an
            empty object to remove the start task from the pool.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.Certificates">
            <summary>
            Gets or sets the list of certificates to be installed on each
            compute node in the pool.
            </summary>
            <remarks>
            For Windows compute nodes, the Batch service installs the
            certificates to the specified certificate store and location. For
            Linux compute nodes, the certificates are stored in a directory
            inside the task working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this
            location. For certificates with visibility of 'remoteUser', a
            'certs' directory is created in the user's home directory (e.g.,
            /home/{user-name}/certs) and certificates are placed in that
            directory.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.ApplicationPackages">
            <summary>
            Gets or sets the list of application packages to be installed on
            each compute node in the pool.
            </summary>
            <remarks>
            Changes to application packages affect all new compute nodes
            joining the pool, but do not affect compute nodes that are already
            in the pool until they are rebooted or reimaged.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.ApplicationLicenses">
            <summary>
            Gets or sets the list of application licenses the Batch service
            will make available on each compute node in the pool.
            </summary>
            <remarks>
            The list of application licenses must be a subset of available
            Batch service application licenses. If a license is requested which
            is not supported, pool creation will fail.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.ResizeOperationStatus">
            <summary>
            Gets contains details about the current or last completed resize
            operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.PoolProvisioningState">
            <summary>
            Defines values for PoolProvisioningState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.PoolStopResizeHeadersInner">
            <summary>
            Defines headers for StopResize operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolStopResizeHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the PoolStopResizeHeadersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolStopResizeHeadersInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PoolStopResizeHeadersInner class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolStopResizeHeadersInner.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.PoolUpdateHeadersInner">
            <summary>
            Defines headers for Update operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolUpdateHeadersInner.#ctor">
            <summary>
            Initializes a new instance of the PoolUpdateHeadersInner class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.PoolUpdateHeadersInner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PoolUpdateHeadersInner class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.PoolUpdateHeadersInner.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ProvisioningState">
            <summary>
            Defines values for ProvisioningState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ProxyResource">
            <summary>
            A definition of an Azure resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ProxyResource.#ctor">
            <summary>
            Initializes a new instance of the ProxyResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ProxyResource.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ProxyResource class.
            </summary>
            <param name="id">The ID of the resource.</param>
            <param name="name">The name of the resource.</param>
            <param name="type">The type of the resource.</param>
            <param name="etag">The ETag of the resource, used for concurrency
            statements.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ProxyResource.Id">
            <summary>
            Gets the ID of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ProxyResource.Name">
            <summary>
            Gets the name of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ProxyResource.Type">
            <summary>
            Gets the type of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ProxyResource.Etag">
            <summary>
            Gets the ETag of the resource, used for concurrency statements.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeError">
            <summary>
            An error that occurred when resizing a pool.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeError.#ctor">
            <summary>
            Initializes a new instance of the ResizeError class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeError.#ctor(System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.ResizeError})">
            <summary>
            Initializes a new instance of the ResizeError class.
            </summary>
            <param name="code">An identifier for the error. Codes are invariant
            and are intended to be consumed programmatically.</param>
            <param name="message">A message describing the error, intended to
            be suitable for display in a user interface.</param>
            <param name="details">Additional details about the error.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeError.Code">
            <summary>
            Gets or sets an identifier for the error. Codes are invariant and
            are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeError.Message">
            <summary>
            Gets or sets a message describing the error, intended to be
            suitable for display in a user interface.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeError.Details">
            <summary>
            Gets or sets additional details about the error.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeError.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeOperationStatus">
            <summary>
            Details about the current or last completed resize operation.
            </summary>
            <remarks>
            Describes either the current operation (if the pool AllocationState is
            Resizing) or the previously completed operation (if the AllocationState
            is Steady).
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeOperationStatus.#ctor">
            <summary>
            Initializes a new instance of the ResizeOperationStatus class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeOperationStatus.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.ComputeNodeDeallocationOption},System.Nullable{System.DateTime},System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.ResizeError})">
            <summary>
            Initializes a new instance of the ResizeOperationStatus class.
            </summary>
            <param name="targetDedicatedNodes">The desired number of dedicated
            compute nodes in the pool.</param>
            <param name="targetLowPriorityNodes">The desired number of
            low-priority compute nodes in the pool.</param>
            <param name="resizeTimeout">The timeout for allocation of compute
            nodes to the pool or removal of compute nodes from the
            pool.</param>
            <param name="nodeDeallocationOption">Determines what to do with a
            node and its running task(s) if the pool size is
            decreasing.</param>
            <param name="startTime">The time when this resize operation was
            started.</param>
            <param name="errors">Details of any errors encountered while
            performing the last resize on the pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeOperationStatus.TargetDedicatedNodes">
            <summary>
            Gets or sets the desired number of dedicated compute nodes in the
            pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeOperationStatus.TargetLowPriorityNodes">
            <summary>
            Gets or sets the desired number of low-priority compute nodes in
            the pool.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeOperationStatus.ResizeTimeout">
            <summary>
            Gets or sets the timeout for allocation of compute nodes to the
            pool or removal of compute nodes from the pool.
            </summary>
            <remarks>
            The default value is 15 minutes. The minimum value is 5 minutes. If
            you specify a value less than 5 minutes, the Batch service returns
            an error; if you are calling the REST API directly, the HTTP status
            code is 400 (Bad Request).
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeOperationStatus.NodeDeallocationOption">
            <summary>
            Gets or sets determines what to do with a node and its running
            task(s) if the pool size is decreasing.
            </summary>
            <remarks>
            The default value is requeue. Possible values include: 'Requeue',
            'Terminate', 'TaskCompletion', 'RetainedData'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeOperationStatus.StartTime">
            <summary>
            Gets or sets the time when this resize operation was started.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ResizeOperationStatus.Errors">
            <summary>
            Gets or sets details of any errors encountered while performing the
            last resize on the pool.
            </summary>
            <remarks>
            This property is set only if an error occurred during the last pool
            resize, and only when the pool allocationState is Steady.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ResourceFile">
            <summary>
            A file to be downloaded from Azure blob storage to a compute node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ResourceFile.#ctor">
            <summary>
            Initializes a new instance of the ResourceFile class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ResourceFile.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ResourceFile class.
            </summary>
            <param name="blobSource">The URL of the file within Azure Blob
            Storage.</param>
            <param name="filePath">The location on the compute node to which to
            download the file, relative to the task's working
            directory.</param>
            <param name="fileMode">The file permission mode attribute in octal
            format.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ResourceFile.BlobSource">
            <summary>
            Gets or sets the URL of the file within Azure Blob Storage.
            </summary>
            <remarks>
            This URL must be readable using anonymous access; that is, the
            Batch service does not present any credentials when downloading the
            blob. There are two ways to get such a URL for a blob in Azure
            storage: include a Shared Access Signature (SAS) granting read
            permissions on the blob, or set the ACL for the blob or its
            container to allow public access.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ResourceFile.FilePath">
            <summary>
            Gets or sets the location on the compute node to which to download
            the file, relative to the task's working directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ResourceFile.FileMode">
            <summary>
            Gets or sets the file permission mode attribute in octal format.
            </summary>
            <remarks>
            This property applies only to files being downloaded to Linux
            compute nodes. It will be ignored if it is specified for a
            resourceFile which will be downloaded to a Windows node. If this
            property is not specified for a Linux node, then a default value of
            0770 is applied to the file.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ResourceFile.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.ScaleSettings">
            <summary>
            Scale settings for the pool
            </summary>
            <remarks>
            Defines the desired size of the pool. This can either be 'fixedScale'
            where the requested targetDedicatedNodes is specified, or 'autoScale'
            which defines a formula which is periodically reevaluated. If this
            property is not specified, the pool will have a fixed scale with 0
            targetDedicatedNodes.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ScaleSettings.#ctor">
            <summary>
            Initializes a new instance of the ScaleSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ScaleSettings.#ctor(Microsoft.Azure.Management.Batch.Fluent.Models.FixedScaleSettings,Microsoft.Azure.Management.Batch.Fluent.Models.AutoScaleSettings)">
            <summary>
            Initializes a new instance of the ScaleSettings class.
            </summary>
            <param name="fixedScale">Fixed scale settings for the pool.</param>
            <param name="autoScale">AutoScale settings for the pool.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ScaleSettings.FixedScale">
            <summary>
            Gets or sets fixed scale settings for the pool.
            </summary>
            <remarks>
            This property and autoScale are mutually exclusive and one of the
            properties must be specified.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.ScaleSettings.AutoScale">
            <summary>
            Gets or sets autoScale settings for the pool.
            </summary>
            <remarks>
            This property and fixedScale are mutually exclusive and one of the
            properties must be specified.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.ScaleSettings.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.StartTask">
            <summary>
            A task which is run when a compute node joins a pool in the Azure Batch
            service, or when the compute node is rebooted or reimaged.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.StartTask.#ctor">
            <summary>
            Initializes a new instance of the StartTask class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.StartTask.#ctor(System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.ResourceFile},System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.EnvironmentSetting},Microsoft.Azure.Management.Batch.Fluent.Models.UserIdentity,System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the StartTask class.
            </summary>
            <param name="commandLine">The command line of the start
            task.</param>
            <param name="resourceFiles">A list of files that the Batch service
            will download to the compute node before running the command
            line.</param>
            <param name="environmentSettings">A list of environment variable
            settings for the start task.</param>
            <param name="userIdentity">The user identity under which the start
            task runs.</param>
            <param name="maxTaskRetryCount">The maximum number of times the
            task may be retried.</param>
            <param name="waitForSuccess">Whether the Batch service should wait
            for the start task to complete successfully (that is, to exit with
            exit code 0) before scheduling any tasks on the compute
            node.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.StartTask.CommandLine">
            <summary>
            Gets or sets the command line of the start task.
            </summary>
            <remarks>
            The command line does not run under a shell, and therefore cannot
            take advantage of shell features such as environment variable
            expansion. If you want to take advantage of such features, you
            should invoke the shell in the command line, for example using "cmd
            /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux.
            Required if any other properties of the startTask are specified.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.StartTask.ResourceFiles">
            <summary>
            Gets or sets a list of files that the Batch service will download
            to the compute node before running the command line.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.StartTask.EnvironmentSettings">
            <summary>
            Gets or sets a list of environment variable settings for the start
            task.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.StartTask.UserIdentity">
            <summary>
            Gets or sets the user identity under which the start task runs.
            </summary>
            <remarks>
            If omitted, the task runs as a non-administrative user unique to
            the task.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.StartTask.MaxTaskRetryCount">
            <summary>
            Gets or sets the maximum number of times the task may be retried.
            </summary>
            <remarks>
            The Batch service retries a task if its exit code is nonzero. Note
            that this value specifically controls the number of retries. The
            Batch service will try the task once, and may then retry up to this
            limit. For example, if the maximum retry count is 3, Batch tries
            the task up to 4 times (one initial try and 3 retries). If the
            maximum retry count is 0, the Batch service does not retry the
            task. If the maximum retry count is -1, the Batch service retries
            the task without limit.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.StartTask.WaitForSuccess">
            <summary>
            Gets or sets whether the Batch service should wait for the start
            task to complete successfully (that is, to exit with exit code 0)
            before scheduling any tasks on the compute node.
            </summary>
            <remarks>
            If true and the start task fails on a compute node, the Batch
            service retries the start task up to its maximum retry count
            (maxTaskRetryCount). If the task has still not completed
            successfully after all retries, then the Batch service marks the
            compute node unusable, and will not schedule tasks to it. This
            condition can be detected via the node state and scheduling error
            detail. If false, the Batch service will not wait for the start
            task to complete. In this case, other tasks can start executing on
            the compute node while the start task is still running; and even if
            the start task fails, new tasks will continue to be scheduled on
            the node. The default is false.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.StorageAccountType">
            <summary>
            Defines values for StorageAccountType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.TaskSchedulingPolicy">
            <summary>
            Specifies how tasks should be distributed across compute nodes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.TaskSchedulingPolicy.#ctor">
            <summary>
            Initializes a new instance of the TaskSchedulingPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.TaskSchedulingPolicy.#ctor(Microsoft.Azure.Management.Batch.Fluent.Models.ComputeNodeFillType)">
            <summary>
            Initializes a new instance of the TaskSchedulingPolicy class.
            </summary>
            <param name="nodeFillType">How tasks should be distributed across
            compute nodes.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.TaskSchedulingPolicy.NodeFillType">
            <summary>
            Gets or sets how tasks should be distributed across compute nodes.
            </summary>
            <remarks>
            Possible values include: 'Spread', 'Pack'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.TaskSchedulingPolicy.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.UserAccount">
            <summary>
            Properties used to create a user on an Azure Batch node.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.UserAccount.#ctor">
            <summary>
            Initializes a new instance of the UserAccount class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.UserAccount.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Batch.Fluent.Models.ElevationLevel},Microsoft.Azure.Management.Batch.Fluent.Models.LinuxUserConfiguration)">
            <summary>
            Initializes a new instance of the UserAccount class.
            </summary>
            <param name="name">The name of the user account.</param>
            <param name="password">The password for the user account.</param>
            <param name="elevationLevel">The elevation level of the user
            account.</param>
            <param name="linuxUserConfiguration">The Linux-specific user
            configuration for the user account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.UserAccount.Name">
            <summary>
            Gets or sets the name of the user account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.UserAccount.Password">
            <summary>
            Gets or sets the password for the user account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.UserAccount.ElevationLevel">
            <summary>
            Gets or sets the elevation level of the user account.
            </summary>
            <remarks>
            nonAdmin - The auto user is a standard user without elevated
            access. admin - The auto user is a user with elevated access and
            operates with full Administrator permissions. The default value is
            nonAdmin. Possible values include: 'NonAdmin', 'Admin'
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.UserAccount.LinuxUserConfiguration">
            <summary>
            Gets or sets the Linux-specific user configuration for the user
            account.
            </summary>
            <remarks>
            This property is ignored if specified on a Windows pool. If not
            specified, the user is created with the default options.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.UserAccount.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.UserIdentity">
            <summary>
            The definition of the user identity under which the task is run.
            </summary>
            <remarks>
            Specify either the userName or autoUser property, but not both.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.UserIdentity.#ctor">
            <summary>
            Initializes a new instance of the UserIdentity class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.UserIdentity.#ctor(System.String,Microsoft.Azure.Management.Batch.Fluent.Models.AutoUserSpecification)">
            <summary>
            Initializes a new instance of the UserIdentity class.
            </summary>
            <param name="userName">The name of the user identity under which
            the task is run.</param>
            <param name="autoUser">The auto user under which the task is
            run.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.UserIdentity.UserName">
            <summary>
            Gets or sets the name of the user identity under which the task is
            run.
            </summary>
            <remarks>
            The userName and autoUser properties are mutually exclusive; you
            must specify one but not both.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.UserIdentity.AutoUser">
            <summary>
            Gets or sets the auto user under which the task is run.
            </summary>
            <remarks>
            The userName and autoUser properties are mutually exclusive; you
            must specify one but not both.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.VirtualMachineConfiguration">
            <summary>
            The configuration for compute nodes in a pool based on the Azure
            Virtual Machines infrastructure.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.VirtualMachineConfiguration.#ctor">
            <summary>
            Initializes a new instance of the VirtualMachineConfiguration
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.VirtualMachineConfiguration.#ctor(Microsoft.Azure.Management.Batch.Fluent.Models.ImageReference,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.OSDisk,Microsoft.Azure.Management.Batch.Fluent.Models.WindowsConfiguration,System.Collections.Generic.IList{Microsoft.Azure.Management.Batch.Fluent.Models.DataDisk},System.String)">
            <summary>
            Initializes a new instance of the VirtualMachineConfiguration
            class.
            </summary>
            <param name="imageReference">A reference to the Azure Virtual
            Machines Marketplace Image or the custom Virtual Machine Image to
            use.</param>
            <param name="nodeAgentSkuId">The SKU of the Batch node agent to be
            provisioned on compute nodes in the pool.</param>
            <param name="osDisk">Settings for the operating system disk of the
            Virtual Machine.</param>
            <param name="windowsConfiguration">Windows operating system
            settings on the virtual machine.</param>
            <param name="dataDisks">The configuration for data disks attached
            to the comptue nodes in the pool.</param>
            <param name="licenseType">The type of on-premises license to be
            used when deploying the operating system.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.VirtualMachineConfiguration.ImageReference">
            <summary>
            Gets or sets a reference to the Azure Virtual Machines Marketplace
            Image or the custom Virtual Machine Image to use.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.VirtualMachineConfiguration.OsDisk">
            <summary>
            Gets or sets settings for the operating system disk of the Virtual
            Machine.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.VirtualMachineConfiguration.NodeAgentSkuId">
            <summary>
            Gets or sets the SKU of the Batch node agent to be provisioned on
            compute nodes in the pool.
            </summary>
            <remarks>
            The Batch node agent is a program that runs on each node in the
            pool, and provides the command-and-control interface between the
            node and the Batch service. There are different implementations of
            the node agent, known as SKUs, for different operating systems. You
            must specify a node agent SKU which matches the selected image
            reference. To get the list of supported node agent SKUs along with
            their list of verified image references, see the 'List supported
            node agent SKUs' operation.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.VirtualMachineConfiguration.WindowsConfiguration">
            <summary>
            Gets or sets windows operating system settings on the virtual
            machine.
            </summary>
            <remarks>
            This property must not be specified if the imageReference specifies
            a Linux OS image.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.VirtualMachineConfiguration.DataDisks">
            <summary>
            Gets or sets the configuration for data disks attached to the
            comptue nodes in the pool.
            </summary>
            <remarks>
            This property must be specified if the compute nodes in the pool
            need to have empty data disks attached to them.
            </remarks>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.VirtualMachineConfiguration.LicenseType">
             <summary>
             Gets or sets the type of on-premises license to be used when
             deploying the operating system.
             </summary>
             <remarks>
             This only applies to images that contain the Windows operating
             system, and should only be used when you hold valid on-premises
             licenses for the nodes which will be deployed. If omitted, no
             on-premises licensing discount is applied. Values are:
            
             Windows_Server - The on-premises license is for Windows Server.
             Windows_Client - The on-premises license is for Windows Client.
            
             </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.VirtualMachineConfiguration.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Models.WindowsConfiguration">
            <summary>
            Windows operating system settings to apply to the virtual machine.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.WindowsConfiguration.#ctor">
            <summary>
            Initializes a new instance of the WindowsConfiguration class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Models.WindowsConfiguration.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the WindowsConfiguration class.
            </summary>
            <param name="enableAutomaticUpdates">Whether automatic updates are
            enabled on the virtual machine.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Models.WindowsConfiguration.EnableAutomaticUpdates">
            <summary>
            Gets or sets whether automatic updates are enabled on the virtual
            machine.
            </summary>
            <remarks>
            If omitted, the default value is true.
            </remarks>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.Operations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Operations.#ctor(Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient)">
            <summary>
            Initializes a new instance of the Operations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.Operations.Client">
            <summary>
            Gets a reference to the BatchManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Operations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists available operations for the Microsoft.Batch provider
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.Operations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists available operations for the Microsoft.Batch provider
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.OperationsExtensions">
            <summary>
            Extension methods for Operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.OperationsExtensions.ListAsync(Microsoft.Azure.Management.Batch.Fluent.IOperations,System.Threading.CancellationToken)">
            <summary>
            Lists available operations for the Microsoft.Batch provider
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.OperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Batch.Fluent.IOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists available operations for the Microsoft.Batch provider
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.PoolOperations">
            <summary>
            PoolOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperations.#ctor(Microsoft.Azure.Management.Batch.Fluent.BatchManagementClient)">
            <summary>
            Initializes a new instance of the PoolOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Batch.Fluent.PoolOperations.Client">
            <summary>
            Gets a reference to the BatchManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperations.ListByBatchAccountWithHttpMessagesAsync(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
             <summary>
             Lists all of the pools in the specified account.
             </summary>
             <param name='resourceGroupName'>
             The name of the resource group that contains the Batch account.
             </param>
             <param name='accountName'>
             The name of the Batch account.
             </param>
             <param name='maxresults'>
             The maximum number of items to return in the response.
             </param>
             <param name='select'>
             Comma separated list of properties that should be returned. e.g.
             "properties/provisioningState". Only top level properties under properties/
             are valid for selection.
             </param>
             <param name='filter'>
             OData filter expression. Valid properties for filtering are:
            
             name
             properties/allocationState
             properties/allocationStateTransitionTime
             properties/creationTime
             properties/provisioningState
             properties/provisioningStateTransitionTime
             properties/lastModified
             properties/vmSize
             properties/interNodeCommunication
             properties/scaleSettings/autoScale
             properties/scaleSettings/fixedScale
             </param>
             <param name='customHeaders'>
             Headers that will be added to request.
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
             <exception cref="T:Microsoft.Rest.Azure.CloudException">
             Thrown when the operation returned an invalid status code
             </exception>
             <exception cref="T:Microsoft.Rest.SerializationException">
             Thrown when unable to deserialize the response
             </exception>
             <exception cref="T:Microsoft.Rest.ValidationException">
             Thrown when a required parameter is null
             </exception>
             <exception cref="T:System.ArgumentNullException">
             Thrown when a required parameter is null
             </exception>
             <return>
             A response object containing the response body and response headers.
             </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new pool inside the specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='parameters'>
            Additional parameters for pool creation.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the pool to update. A value of "*" can
            be used to apply the operation only if the pool already exists. If omitted,
            this operation will always be applied.
            </param>
            <param name='ifNoneMatch'>
            Set to '*' to allow a new pool to be created, but to prevent updating an
            existing pool. Other values will be ignored.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates the properties of an existing pool.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='parameters'>
            Pool properties that should be updated. Properties that are supplied will
            be updated, any property not supplied will be unchanged.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the pool to update. This value can be
            omitted or set to "*" to apply the operation unconditionally.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified pool.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperations.DisableAutoScaleWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperations.StopResizeWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Stops an ongoing resize operation on the pool.
            </summary>
            <remarks>
            This does not restore the pool to its previous state before the resize
            operation: it only stops any further changes being made, and the pool
            maintains its current state. After stopping, the pool stabilizes at the
            number of nodes it was at when the stop operation was done. During the stop
            operation, the pool allocation state changes first to stopping and then to
            steady. A resize operation need not be an explicit resize pool request;
            this API can also be used to halt the initial sizing of the pool when it is
            created.
            </remarks>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new pool inside the specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='parameters'>
            Additional parameters for pool creation.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the pool to update. A value of "*" can
            be used to apply the operation only if the pool already exists. If omitted,
            this operation will always be applied.
            </param>
            <param name='ifNoneMatch'>
            Set to '*' to allow a new pool to be created, but to prevent updating an
            existing pool. Other values will be ignored.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperations.BeginDeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified pool.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperations.ListByBatchAccountNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Batch.Fluent.PoolOperationsExtensions">
            <summary>
            Extension methods for PoolOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperationsExtensions.ListByBatchAccountAsync(Microsoft.Azure.Management.Batch.Fluent.IPoolOperations,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Lists all of the pools in the specified account.
             </summary>
             <param name='operations'>
             The operations group for this extension method.
             </param>
             <param name='resourceGroupName'>
             The name of the resource group that contains the Batch account.
             </param>
             <param name='accountName'>
             The name of the Batch account.
             </param>
             <param name='maxresults'>
             The maximum number of items to return in the response.
             </param>
             <param name='select'>
             Comma separated list of properties that should be returned. e.g.
             "properties/provisioningState". Only top level properties under properties/
             are valid for selection.
             </param>
             <param name='filter'>
             OData filter expression. Valid properties for filtering are:
            
             name
             properties/allocationState
             properties/allocationStateTransitionTime
             properties/creationTime
             properties/provisioningState
             properties/provisioningStateTransitionTime
             properties/lastModified
             properties/vmSize
             properties/interNodeCommunication
             properties/scaleSettings/autoScale
             properties/scaleSettings/fixedScale
             </param>
             <param name='cancellationToken'>
             The cancellation token.
             </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Batch.Fluent.IPoolOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new pool inside the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='parameters'>
            Additional parameters for pool creation.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the pool to update. A value of "*" can
            be used to apply the operation only if the pool already exists. If omitted,
            this operation will always be applied.
            </param>
            <param name='ifNoneMatch'>
            Set to '*' to allow a new pool to be created, but to prevent updating an
            existing pool. Other values will be ignored.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Batch.Fluent.IPoolOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner,System.String,System.Threading.CancellationToken)">
            <summary>
            Updates the properties of an existing pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='parameters'>
            Pool properties that should be updated. Properties that are supplied will
            be updated, any property not supplied will be unchanged.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the pool to update. This value can be
            omitted or set to "*" to apply the operation unconditionally.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Batch.Fluent.IPoolOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperationsExtensions.GetAsync(Microsoft.Azure.Management.Batch.Fluent.IPoolOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets information about the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperationsExtensions.DisableAutoScaleAsync(Microsoft.Azure.Management.Batch.Fluent.IPoolOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Disables automatic scaling for a pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperationsExtensions.StopResizeAsync(Microsoft.Azure.Management.Batch.Fluent.IPoolOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Stops an ongoing resize operation on the pool.
            </summary>
            <remarks>
            This does not restore the pool to its previous state before the resize
            operation: it only stops any further changes being made, and the pool
            maintains its current state. After stopping, the pool stabilizes at the
            number of nodes it was at when the stop operation was done. During the stop
            operation, the pool allocation state changes first to stopping and then to
            steady. A resize operation need not be an explicit resize pool request;
            this API can also be used to halt the initial sizing of the pool when it is
            created.
            </remarks>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Batch.Fluent.IPoolOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Batch.Fluent.Models.PoolInner,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new pool inside the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='parameters'>
            Additional parameters for pool creation.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the pool to update. A value of "*" can
            be used to apply the operation only if the pool already exists. If omitted,
            this operation will always be applied.
            </param>
            <param name='ifNoneMatch'>
            Set to '*' to allow a new pool to be created, but to prevent updating an
            existing pool. Other values will be ignored.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperationsExtensions.BeginDeleteAsync(Microsoft.Azure.Management.Batch.Fluent.IPoolOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified pool.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group that contains the Batch account.
            </param>
            <param name='accountName'>
            The name of the Batch account.
            </param>
            <param name='poolName'>
            The pool name. This must be unique within the account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Batch.Fluent.PoolOperationsExtensions.ListByBatchAccountNextAsync(Microsoft.Azure.Management.Batch.Fluent.IPoolOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all of the pools in the specified account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
    </members>
</doc>
